<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2024.2.3">
  <Settings>
    <Param val="3" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="ptb" valType="str" updates="None" name="Audio lib"/>
    <Param val="$&quot;https://bhampsychology.eu.qualtrics.com/jfe/form/SV_eRpJHg9Ev4xwmIC?return=fromPavlovia&amp;PROLIFIC_PID=&quot; + expInfo['participant']" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expInfo['PROLIFIC_PID'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="" valType="str" updates="None" name="End Message"/>
    <Param val="{'participant': '', 'PROLIFIC_PID': '', 'session': '001'}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="False" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="['Reorganized_Set1.csv', 'Set1.csv', 'Reorganized_Set2.csv', 'RatingScale.png', 'animal_cropped.jpg', 'cactus_cropped.png', 'clock_cropped.jpg', 'clothing_cropped.jpg', 'cone_cropped.png', 'flower_cropped.jpg', 'fruit_cropped.jpg', 'tool_cropped.jpg', 'transport_cropped.jpg', 'hairclip_cropped.png', 'key_cropped.png', 'kodak_cropped.png', 'phone_cropped.png', 'tape_cropped.png', 'Set2.csv', 'grey.png']" valType="list" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="2022.2.0" valType="str" updates="None" name="Use version"/>
    <Param val="[1280, 800]" valType="list" updates="None" name="Window size (pixels)"/>
    <Param val="none" valType="str" updates="None" name="backgroundFit"/>
    <Param val="" valType="str" updates="None" name="backgroundImg"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="float" valType="str" updates="None" name="clockFormat"/>
    <Param val="{'mainleftcredit': 'priority.CRITICAL', 'mainrightcredit': 'priority.CRITICAL', 'mainupcredit': 'priority.CRITICAL', 'mainchosencredit': 'priority.CRITICAL', 'mainreactiontime': 'priority.CRITICAL', 'PROLIFIC_PID': 'priority.CRITICAL', 'ParticipantID': 'priority.CRITICAL', 'SelectedStimuli_File': 'priority.CRITICAL', 'FinalCredits': 'priority.CRITICAL', 'expName': 'priority.LOW'}" valType="dict" updates="None" name="colPriority"/>
    <Param val="0.0000, 0.0000, 0.0000" valType="color" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="warning" valType="code" updates="None" name="consoleLoggingLevel"/>
    <Param val="default" valType="str" updates="None" name="ecSampleRate"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="OptionsStudy_v2" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="" valType="code" updates="None" name="frameRate"/>
    <Param val="Attempting to measure frame rate of screen, please wait..." valType="str" updates="None" name="frameRateMsg"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="info" valType="code" updates="None" name="logging level"/>
    <Param val="True" valType="bool" updates="None" name="measureFrameRate"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="neon.local" valType="str" updates="None" name="plCompanionAddress"/>
    <Param val="8080" valType="num" updates="None" name="plCompanionPort"/>
    <Param val="True" valType="bool" updates="None" name="plCompanionRecordingEnabled"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="1" valType="code" updates="None" name="runMode"/>
    <Param val="False" valType="bool" updates="None" name="rush"/>
    <Param val="time" valType="str" updates="None" name="sortColumns"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
    <Param val="pyglet" valType="str" updates="None" name="winBackend"/>
  </Settings>
  <Routines>
    <Routine name="Introduction">
      <RoutineSettingsComponent name="Introduction" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Introduction" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_22" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_22" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="WELCOME TO THE STUDY&amp;#10;&amp;#10;The study aims to improve our understanding of how people track and respond to rewards.&amp;#10;&amp;#10;It is a computer-based experiment, followed by a set of questionnaires. &amp;#10;Completing this study should take approximately 50 MINUTES.&amp;#10;&amp;#10;Press SPACE to continue. &amp;#10;" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_30" plugin="None">
        <Param val="['space']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_30" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="ParticipantInformation">
      <RoutineSettingsComponent name="ParticipantInformation" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="ParticipantInformation" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="participantinfo" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="participantinfo" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="The experiment consists of four segments:&amp;#10;&amp;#10;1. Reaction Time Calibration&amp;#10;2. Learning&amp;#10;3. Training&amp;#10;4. Main Experiment&amp;#10;You may earn up to £4 extra based on your total credits.&amp;#10;&amp;#10;After the main experiment, you'll complete some questionnaires (about 30 minutes).&amp;#10;&amp;#10;Press SPACE to continue." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="code_25" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="prolificID = expInfo[&quot;participant&quot;];&amp;#10;psychoJS.experiment.addData(&quot;PROLIFIC_PID&quot;, prolificID);&amp;#10;psychoJS.experiment.addData(&quot;ParticipantID&quot;, prolificID);&amp;#10;console.log(`Prolific ID: ${prolificID}`);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="prolificID = expInfo['participant']&amp;#10;thisExp.addData('PROLIFIC_PID', prolificID)&amp;#10;thisExp.addData('ParticipantID', prolificID)&amp;#10;print(f&quot;Prolific ID: {prolificID}&quot;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_25" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="key_resp_28" plugin="None">
        <Param val="['space']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_28" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="RTCalib_prompt">
      <RoutineSettingsComponent name="RTCalib_prompt" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="RTCalib_prompt" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_6" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_6" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Are you ready to begin the Reaction Time Calibration?&amp;#10;&amp;#10;If yes, press Y. &amp;#10;If no, press N." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_10" plugin="None">
        <Param val="['y','n']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_10" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="RTCalib_Instructions">
      <RoutineSettingsComponent name="RTCalib_Instructions" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="RTCalib_Instructions" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_23" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_23" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="You are about to start the Reaction Time Calibration.&amp;#10;&amp;#10;You must respond as quickly as possible after seeing a RED BOX appear on the screen. &amp;#10;&amp;#10;You will use your RIGHT HAND to press the ARROW keys (← ↑ → ) on the keyboard.&amp;#10;&amp;#10;Press SPACE to continue." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_29" plugin="None">
        <Param val="['space']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_29" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="RT_Condition_Instructions">
      <RoutineSettingsComponent name="RT_Condition_Instructions" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="RT_Condition_Instructions" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_18" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="conditions = ['left', 'right', 'up']&amp;#10;condition_index = 0&amp;#10;current_condition = conditions[condition_index]&amp;#10;&amp;#10;# Initialize condition-specific instruction flag as a dictionary (before any routines begin)&amp;#10;instruction_shown = {'left': False, 'right': False, 'up': False}&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="conditions = [&quot;left&quot;, &quot;right&quot;, &quot;up&quot;];&amp;#10;condition_index = 0;&amp;#10;current_condition = conditions[condition_index];&amp;#10;instruction_shown = {&quot;left&quot;: false, &quot;right&quot;: false, &quot;up&quot;: false};&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="console.log(`Current condition: ${current_condition}`);&amp;#10;console.log(`Instruction shown? ${instruction_shown[current_condition]}`);&amp;#10;if ((! instruction_shown[current_condition])) {&amp;#10;    if ((current_condition === &quot;left&quot;)) {&amp;#10;        instructionText.text = &quot;Please press the LEFT arrow key (\u2190) when you see the RED BOX.\nPress SPACE to continue.&quot;;&amp;#10;    } else {&amp;#10;        if ((current_condition === &quot;right&quot;)) {&amp;#10;            instructionText.text = &quot;Please press the RIGHT arrow key (\u2192) when you see the RED BOX.\nPress SPACE to continue.&quot;;&amp;#10;        } else {&amp;#10;            if ((current_condition === &quot;up&quot;)) {&amp;#10;                instructionText.text = &quot;Please press the UP arrow key (\u2191) when you see the RED BOX.\nPress SPACE to continue.&quot;;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    instruction_shown[current_condition] = true;&amp;#10;    console.log(`Instructions for the current condition: ${current_condition}`);&amp;#10;} else {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="print(f&quot;Current condition: {current_condition}&quot;)&amp;#10;print(f&quot;Instruction shown? {instruction_shown[current_condition]}&quot;)&amp;#10;&amp;#10;if not instruction_shown[current_condition]:&amp;#10;    # Set the appropriate instruction text based on the current condition&amp;#10;    if current_condition == 'left':&amp;#10;        instructionText.text = &quot;Please press the LEFT arrow key (←) when you see the RED BOX.\nPress SPACE to continue.&quot;&amp;#10;    elif current_condition == 'right':&amp;#10;        instructionText.text = &quot;Please press the RIGHT arrow key (→) when you see the RED BOX.\nPress SPACE to continue.&quot;&amp;#10;    elif current_condition == 'up':&amp;#10;        instructionText.text = &quot;Please press the UP arrow key (↑) when you see the RED BOX.\nPress SPACE to continue.&quot;&amp;#10;&amp;#10;    # Mark that the instruction for the current condition has been shown&amp;#10;    instruction_shown[current_condition] = True&amp;#10;    print(f&quot;Instructions for the current condition: {current_condition}&quot;)&amp;#10;else:&amp;#10;    # Skip this routine if instructions for the current condition have already been shown&amp;#10;    continueRoutine = False&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.eventManager.clearEvents();&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# Clear all keypresses to prevent carryover to the next routine&amp;#10;event.clearEvents()&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_18" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="instructionText" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="instructionText" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_21" plugin="None">
        <Param val="['space']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_21" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="RT_Calib">
      <RoutineSettingsComponent name="RT_Calib" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="RT_Calib" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_19" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="jitter = ((Math.random() * (6 - 2)) + 2);&amp;#10;function get_random_position(box_width, box_height) {&amp;#10;    var screen_height, screen_width, x, x_max, x_min, y, y_max, y_min;&amp;#10;    screen_width = 1.0;&amp;#10;    screen_height = 1.0;&amp;#10;    box_width = 0.1;&amp;#10;    box_height = 0.1;&amp;#10;    x_min = (((- screen_width) / 2) + (box_width / 2));&amp;#10;    x_max = ((screen_width / 2) - (box_width / 2));&amp;#10;    y_min = (((- screen_height) / 2) + (box_height / 2));&amp;#10;    y_max = ((screen_height / 2) - (box_height / 2));&amp;#10;    x = ((Math.random() * (x_max - x_min)) + x_min);&amp;#10;    y = ((Math.random() * (y_max - y_min)) + y_min);&amp;#10;    return [x, y];&amp;#10;}&amp;#10;boxPos = get_random_position(0.1, 0.1);&amp;#10;console.log(`Red box position: ${boxPos}`);&amp;#10;console.log(`Jitter duration: ${util.pad(Number.parseFloat(jitter).toFixed(2), 1)} seconds`);&amp;#10;console.log(`Current condition: ${current_condition}`);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# define random jitter for each trial&amp;#10;jitter = Math.random() * (6 - 2) + 2;&amp;#10;&amp;#10;# Define get_random_position function (compatible with JS)&amp;#10;def get_random_position(box_width, box_height):&amp;#10;    screen_width = 1.0&amp;#10;    screen_height = 1.0&amp;#10;    box_width = 0.1&amp;#10;    box_height = 0.1&amp;#10;    x_min = (-screen_width / 2) + (box_width / 2)&amp;#10;    x_max = (screen_width / 2) - (box_width / 2)&amp;#10;    y_min = (-screen_height / 2) + (box_height / 2)&amp;#10;    y_max = (screen_height / 2) - (box_height / 2)&amp;#10;    x = Math.random() * (x_max - x_min) + x_min&amp;#10;    y = Math.random() * (y_max - y_min) + y_min&amp;#10;    return [x, y]&amp;#10;&amp;#10;# Set red box position randomly&amp;#10;boxPos = get_random_position(0.1, 0.1)&amp;#10;&amp;#10;# Optionally print for debugging&amp;#10;print(f&quot;Red box position: {boxPos}&quot;)&amp;#10;print(f&quot;Jitter duration: {jitter:.2f} seconds&quot;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_19" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="fixationCross" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="fixationCross" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="$jitter" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="redBox" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="1.0000, -1.0000, -1.0000" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="white" valType="color" updates="constant" name="lineColor"/>
        <Param val="1" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="redBox" valType="code" updates="None" name="name"/>
        <Param val="1" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="$boxPos" valType="list" updates="set every repeat" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.1, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$jitter" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <KeyboardComponent name="keyResponse" plugin="None">
        <Param val="['left', 'right', 'l', 'r', 'up']" valType="list" updates="set every repeat" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="keyResponse" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="$jitter" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="first key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_31" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="# a small buffer time (~0.001 seconds) used to avoid errors due to tiny timing mismatches&amp;#10;frameTolerance = 0.001&amp;#10;&amp;#10;# Define conditions and allowed keys&amp;#10;conditions = ['left', 'right', 'up']&amp;#10;allowed_keys = {&amp;#10;    'left': ['left', 'l'], &amp;#10;    'right': ['right', 'r'], &amp;#10;    'up': ['up', 'u']&amp;#10;}&amp;#10;&amp;#10;# Initialize variables&amp;#10;correctTrialCount = {'left': 0, 'right': 0, 'up': 0}&amp;#10;condition_index = 0&amp;#10;current_condition = conditions[condition_index]&amp;#10;print(f&quot;Current condition: {current_condition}&quot;)&amp;#10;&amp;#10;# Initialize variables&amp;#10;key = None&amp;#10;keyResponse.keys = []&amp;#10;keyResponse.rt = None&amp;#10;&amp;#10;reactionTime = None&amp;#10;boxOnsetTime = None&amp;#10;&amp;#10;responseMade = False&amp;#10;wrongButtonPress = False&amp;#10;noResponse = False" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="frameTolerance = 0.001;&amp;#10;conditions = [&quot;left&quot;, &quot;right&quot;, &quot;up&quot;];&amp;#10;allowed_keys = {&quot;left&quot;: [&quot;left&quot;, &quot;l&quot;], &quot;right&quot;: [&quot;right&quot;, &quot;r&quot;], &quot;up&quot;: [&quot;up&quot;, &quot;u&quot;]};&amp;#10;correctTrialCount = {&quot;left&quot;: 0, &quot;right&quot;: 0, &quot;up&quot;: 0};&amp;#10;condition_index = 0;&amp;#10;current_condition = conditions[condition_index];&amp;#10;console.log(`Current condition: ${current_condition}`);&amp;#10;key = null;&amp;#10;keyResponse.keys = [];&amp;#10;keyResponse.rt = null;&amp;#10;reactionTime = null;&amp;#10;boxOnsetTime = null;&amp;#10;responseMade = false;&amp;#10;wrongButtonPress = false;&amp;#10;noResponse = false;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;psychoJS.experiment.addData(&quot;CurrentCondition&quot;, current_condition);&amp;#10;if (keyResponse.keys) {&amp;#10;    key = keyResponse.keys[0];&amp;#10;    reactionTime = keyResponse.rt;&amp;#10;    console.log(`Key pressed: ${key}, RT: ${reactionTime}s`);&amp;#10;    psychoJS.experiment.addData(&quot;CalibKeyPressed&quot;, key);&amp;#10;    psychoJS.experiment.addData(&quot;CalibRT&quot;, reactionTime);&amp;#10;    if (_pj.in_es6(key, allowed_keys[current_condition])) {&amp;#10;        correctTrialCount[current_condition] += 1;&amp;#10;        console.log(`Correct key! Total correct for ${current_condition}: ${correctTrialCount[current_condition]}`);&amp;#10;        wrongButtonPress = false;&amp;#10;        noResponse = false;&amp;#10;        psychoJS.experiment.addData(&quot;CalibAccuracy&quot;, &quot;correct&quot;);&amp;#10;    } else {&amp;#10;        wrongButtonPress = true;&amp;#10;        console.log(`Wrong key '${key}' pressed.`);&amp;#10;        noResponse = false;&amp;#10;        psychoJS.experiment.addData(&quot;CalibAccuracy&quot;, &quot;false&quot;);&amp;#10;    }&amp;#10;} else {&amp;#10;    console.log(&quot;No response given.&quot;);&amp;#10;    wrongButtonPress = false;&amp;#10;    noResponse = true;&amp;#10;    psychoJS.experiment.addData(&quot;CalibKeyPressed&quot;, &quot;None&quot;);&amp;#10;    psychoJS.experiment.addData(&quot;CalibRT&quot;, &quot;NA&quot;);&amp;#10;    psychoJS.experiment.addData(&quot;CalibAccuracy&quot;, &quot;no_response_calib&quot;);&amp;#10;}&amp;#10;if ((correctTrialCount[current_condition] &gt;= 6)) {&amp;#10;    console.log(`Condition '${current_condition}' completed with ${correctTrialCount[current_condition]} correct trials.`);&amp;#10;    condition_index += 1;&amp;#10;}&amp;#10;if ((condition_index &lt; conditions.length)) {&amp;#10;    current_condition = conditions[condition_index];&amp;#10;    console.log(`Switching to condition: ${current_condition}`);&amp;#10;} else {&amp;#10;    console.log(&quot;All conditions completed. Ending Reaction Time Calibration.&quot;);&amp;#10;    RTloop.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="thisExp.addData('CurrentCondition', current_condition)&amp;#10;&amp;#10;if keyResponse.keys:&amp;#10;    key = keyResponse.keys[0]&amp;#10;    reactionTime = keyResponse.rt&amp;#10;    print(f&quot;Key pressed: {key}, RT: {reactionTime}s&quot;)&amp;#10;    &amp;#10;    # Save key and RT&amp;#10;    thisExp.addData('CalibKeyPressed', key)&amp;#10;    thisExp.addData('CalibRT', reactionTime)&amp;#10;    &amp;#10;    if key in allowed_keys[current_condition]:&amp;#10;        correctTrialCount[current_condition] += 1&amp;#10;        print(f&quot;Correct key! Total correct for {current_condition}: {correctTrialCount[current_condition]}&quot;)&amp;#10;        wrongButtonPress = False&amp;#10;        noResponse = False&amp;#10;        thisExp.addData('CalibAccuracy', 'correct')&amp;#10;    else:&amp;#10;        wrongButtonPress = True&amp;#10;        print(f&quot;Wrong key '{key}' pressed.&quot;)&amp;#10;        noResponse = False&amp;#10;        thisExp.addData('CalibAccuracy', 'false')&amp;#10;&amp;#10;else:&amp;#10;    print(&quot;No response given.&quot;)&amp;#10;    wrongButtonPress = False&amp;#10;    noResponse = True&amp;#10;    thisExp.addData('CalibKeyPressed', 'None')&amp;#10;    thisExp.addData('CalibRT', 'NA')&amp;#10;    thisExp.addData('CalibAccuracy', 'no_response_calib')&amp;#10;&amp;#10;# Transition logic&amp;#10;if correctTrialCount[current_condition] &gt;= 6:&amp;#10;    print(f&quot;Condition '{current_condition}' completed with {correctTrialCount[current_condition]} correct trials.&quot;)&amp;#10;    condition_index += 1  # Move to the next condition&amp;#10;&amp;#10;# Update the current condition&amp;#10;if condition_index &lt; len(conditions):&amp;#10;    current_condition = conditions[condition_index]&amp;#10;    print(f&quot;Switching to condition: {current_condition}&quot;)&amp;#10;else:&amp;#10;    print(&quot;All conditions completed. Ending Reaction Time Calibration.&quot;)&amp;#10;    RTloop.finished = True&amp;#10;    " valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_31" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="RT_WarningText">
      <RoutineSettingsComponent name="RT_WarningText" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="RT_WarningText" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="warningText" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="warningText" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$warningText.text" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="code_20" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if (wrongButtonPress) {&amp;#10;    warningText.text = &quot;Wrong button press! \nPlease follow the instructions.&quot;;&amp;#10;} else {&amp;#10;    if (noResponse) {&amp;#10;        warningText.text = &quot;No response! \nPlease press the required key when you see the RED BOX.&quot;;&amp;#10;    } else {&amp;#10;        warningText.text = &quot;&quot;;&amp;#10;    }&amp;#10;}&amp;#10;console.log(`Warning text shown: ${warningText.text}`);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if wrongButtonPress:&amp;#10;    warningText.text = &quot;Wrong button press! \nPlease follow the instructions.&quot;&amp;#10;elif noResponse:&amp;#10;    warningText.text = &quot;No response! \nPlease press the required key when you see the RED BOX.&quot;&amp;#10;else:&amp;#10;    warningText.text = &quot;&quot;  # Do not show any text if the response was correct&amp;#10;print(f&quot;Warning text shown: {warningText.text}&quot;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="wrongButtonPress = false;&amp;#10;noResponse = false;&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# End Routine&amp;#10;wrongButtonPress = False&amp;#10;noResponse = False&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_20" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="RT_End">
      <RoutineSettingsComponent name="RT_End" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="RT_End" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_24" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_24" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Reaction Time Calibration has now finished.&amp;#10;&amp;#10;You will start  the LEARNING part now.&amp;#10;&amp;#10;Press SPACE to continue." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Initialization">
      <RoutineSettingsComponent name="Initialization" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Initialization" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="# running locally&amp;#10;# import random&amp;#10;&amp;#10;# Randomly select the stimuli set&amp;#10;#stimuli_file = random(['Set1.csv', 'Set2.csv'])&amp;#10;&amp;#10;# Save values for output file&amp;#10;thisExp.addData('ProlificID', expInfo['PROLIFIC_PID'])&amp;#10;thisExp.addData('ParticipantID', expInfo['participant'])&amp;#10;&amp;#10;# Randomly select the stimuli set&amp;#10;stimuli_sets = ['Set1.csv', 'Set2.csv']&amp;#10;stimuli_file = stimuli_sets[int(random() * len(stimuli_sets))]&amp;#10;&amp;#10;# use the reorganized trial schedule version for the main exp - &amp;#10;if stimuli_file == 'Set1.csv':&amp;#10;    main_exp_file = 'Reorganized_Set1.csv'&amp;#10;else:&amp;#10;    main_exp_file = 'Reorganized_Set2.csv'&amp;#10;&amp;#10;thisExp.addData('SelectedStimuli_File', stimuli_file)&amp;#10;thisExp.addData('MainExp_File', main_exp_file)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;ProlificID&quot;, expInfo[&quot;PROLIFIC_PID&quot;]);&amp;#10;psychoJS.experiment.addData(&quot;ParticipantID&quot;, expInfo[&quot;participant&quot;]);&amp;#10;stimuli_sets = [&quot;Set1.csv&quot;, &quot;Set2.csv&quot;];&amp;#10;stimuli_file = stimuli_sets[Number.parseInt((Math.random() * stimuli_sets.length))];&amp;#10;if ((stimuli_file === &quot;Set1.csv&quot;)) {&amp;#10;    main_exp_file = &quot;Reorganized_Set1.csv&quot;;&amp;#10;} else {&amp;#10;    main_exp_file = &quot;Reorganized_Set2.csv&quot;;&amp;#10;}&amp;#10;psychoJS.experiment.addData(&quot;SelectedStimuli_File&quot;, stimuli_file);&amp;#10;psychoJS.experiment.addData(&quot;MainExp_File&quot;, main_exp_file);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="TrainingPrompt">
      <RoutineSettingsComponent name="TrainingPrompt" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="TrainingPrompt" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="prompt2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="prompt2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Are you ready to begin the Learning Part?&amp;#10;&amp;#10;If yes, press Y. &amp;#10;If no, press N." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_3" plugin="None">
        <Param val="['y','n']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_3" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="TrainingInstructions">
      <RoutineSettingsComponent name="TrainingInstructions" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="TrainingInstructions" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="TrainingInstruction" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="TrainingInstruction" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="The Learning part consists of 21 trials. &amp;#10;In each one, you’ll choose between two images. Each image gives a certain number of credits, which count toward your final bonus.&amp;#10;&amp;#10;Use the LEFT ARROW (←) key to choose the left image, and the RIGHT ARROW (→) to choose the right one.&amp;#10;&amp;#10;You’ll have 4 seconds to make your choice. If you don’t choose in time, the image with lower credits will be picked automatically.&amp;#10;&amp;#10;Press SPACE to proceed." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_2" plugin="None">
        <Param val="['space']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_2" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="ComprehensionTraining1">
      <RoutineSettingsComponent name="ComprehensionTraining1" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="ComprehensionTraining1" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_14" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_14" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Which key do you press to select the left image?&amp;#10;&amp;#10;(A) Left arrow&amp;#10;(B) Right arrow&amp;#10;(C) Up arrow" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_23" plugin="None">
        <Param val="['a','b','c']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_23" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="ComprehensionTraining2">
      <RoutineSettingsComponent name="ComprehensionTraining2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="ComprehensionTraining2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="comprehension_2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="comprehension_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="What happens if you fail to make a choice within the given time?&amp;#10;&amp;#10;(A) Random image is selected.&amp;#10;(B) Lower credit image is selected.&amp;#10;(C) Higher credit image is selected." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_22" plugin="None">
        <Param val="['a', 'b', 'c']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_22" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="ComprehensionTraining3">
      <RoutineSettingsComponent name="ComprehensionTraining3" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="ComprehensionTraining3" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_19" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_19" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="How many seconds do you have to make a choice in the Learning part?&amp;#10;&amp;#10;(A) 2 seconds&amp;#10;(B) 4 seconds&amp;#10;(C) 6 seconds" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_24" plugin="None">
        <Param val="['a','b','c']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_24" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="ComprehensionTrainingFeedback">
      <RoutineSettingsComponent name="ComprehensionTrainingFeedback" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="ComprehensionTrainingFeedback" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="comprehensiontrainingfeedback" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="comprehensiontrainingfeedback" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_25" plugin="None">
        <Param val="['space']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_25" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_21" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="correct_answers = {&quot;key_resp_23&quot;: &quot;a&quot;, &quot;key_resp_22&quot;: &quot;b&quot;, &quot;key_resp_24&quot;: &quot;b&quot;};&amp;#10;responses = [key_resp_23.keys, key_resp_22.keys, key_resp_24.keys];&amp;#10;correct = [(responses[0] === correct_answers[&quot;key_resp_23&quot;]), (responses[1] === correct_answers[&quot;key_resp_22&quot;]), (responses[2] === correct_answers[&quot;key_resp_24&quot;])];&amp;#10;psychoJS.experiment.addData(&quot;resp_q1&quot;, responses[&quot;key_resp_23&quot;]);&amp;#10;psychoJS.experiment.addData(&quot;resp_q2&quot;, responses[&quot;key_resp_22&quot;]);&amp;#10;psychoJS.experiment.addData(&quot;resp_q3&quot;, responses[&quot;key_resp_24&quot;]);&amp;#10;if ((util.sum(correct) === correct.length)) {&amp;#10;    comprehensiontrainingfeedback.text = &quot;All answers are correct! \nPress SPACE to continue.&quot;;&amp;#10;    comprehension_correct = true;&amp;#10;} else {&amp;#10;    comprehensiontrainingfeedback.text = &quot;Some answers are incorrect. \nPlease press SPACE to try again.&quot;;&amp;#10;    comprehension_correct = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# Correct answers for the questions&amp;#10;correct_answers = {'key_resp_23': 'a', 'key_resp_22': 'b', 'key_resp_24': 'b'}&amp;#10;&amp;#10;&amp;#10;# Check if all answers are correct&amp;#10;responses = [key_resp_23.keys, key_resp_22.keys, key_resp_24.keys]&amp;#10;correct = [responses[0] == correct_answers['key_resp_23'],&amp;#10;           responses[1] == correct_answers['key_resp_22'],&amp;#10;           responses[2] == correct_answers['key_resp_24']]&amp;#10;&amp;#10;# Log each response to the data file&amp;#10;thisExp.addData('resp_q1', responses['key_resp_23'])&amp;#10;thisExp.addData('resp_q2', responses['key_resp_22'])&amp;#10;thisExp.addData('resp_q3', responses['key_resp_24'])&amp;#10;&amp;#10;# Create feedback message&amp;#10;if sum(correct) == len(correct):  # This replaces `all(correct)`&amp;#10;    comprehensiontrainingfeedback.text = &quot;All answers are correct! \nPress SPACE to continue.&quot;&amp;#10;    comprehension_correct = True&amp;#10;else:&amp;#10;    comprehensiontrainingfeedback.text = &quot;Some answers are incorrect. \nPlease press SPACE to try again.&quot;&amp;#10;    comprehension_correct = False&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if (comprehension_correct) {&amp;#10;    comprehensiontrainingloop.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# Exit the loop if all answers are correct&amp;#10;if comprehension_correct:&amp;#10;    comprehensiontrainingloop.finished = True&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_21" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="FixationCross">
      <RoutineSettingsComponent name="FixationCross" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="FixationCross" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_18" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_18" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="Training">
      <RoutineSettingsComponent name="Training" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Training" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="leftImage" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$image1" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="leftImage" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.3, -0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="rightImage" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$image2" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="rightImage" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.3, -0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <KeyboardComponent name="choice" plugin="None">
        <Param val="['left','right']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="choice" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="creditCounterTraining" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="creditCounterTraining" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.65, 0.42)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;Total Credits: &quot; + str(creditsEarnedTraining)" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="autoSelect" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="# Load stimuli set (Set1 or Set2)&amp;#10;thisExp.addData('stimuli_set', stimuli_file)&amp;#10;print(f&quot;Randomly assigned stimuli set: {stimuli_file}&quot;)&amp;#10;&amp;#10;# Track total correct choices during training&amp;#10;correct_trials_training = 0  &amp;#10;total_trials_training = 0 &amp;#10;&amp;#10;# Initialize variables&amp;#10;response_made_training = False&amp;#10;selected_image = None&amp;#10;selected_credits = 0&amp;#10;autoselection_training  = False&amp;#10;&amp;#10;creditsEarnedTraining = 0&amp;#10;&amp;#10;choice.keys = []&amp;#10;choice.rt = None&amp;#10;&amp;#10;# Initialize RT clock for training&amp;#10;rt_clock_training = core.Clock()&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;stimuli_set&quot;, stimuli_file);&amp;#10;console.log(`Randomly assigned stimuli set: ${stimuli_file}`);&amp;#10;correct_trials_training = 0;&amp;#10;total_trials_training = 0;&amp;#10;response_made_training = false;&amp;#10;selected_image = null;&amp;#10;selected_credits = 0;&amp;#10;autoselection_training = false;&amp;#10;creditsEarnedTraining = 0;&amp;#10;choice.keys = [];&amp;#10;choice.rt = null;&amp;#10;rt_clock_training = new util.Clock();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="console.log(&quot;Training&quot;);&amp;#10;if ((TrainingTrials.thisN === 0)) {&amp;#10;    shuffled_trials = TrainingTrials.trialList.slice();&amp;#10;    util.shuffle(shuffled_trials);&amp;#10;    TrainingTrials.trialList = shuffled_trials;&amp;#10;}&amp;#10;console.log(TrainingTrials.trialList);&amp;#10;current_training_trial = TrainingTrials.trialList[TrainingTrials.thisN];&amp;#10;image1file = current_training_trial[&quot;image1&quot;];&amp;#10;image2file = current_training_trial[&quot;image2&quot;];&amp;#10;credit1t = Number.parseInt(current_training_trial[&quot;credit1&quot;]);&amp;#10;credit2t = Number.parseInt(current_training_trial[&quot;credit2&quot;]);&amp;#10;leftImage.setImage(image1file);&amp;#10;rightImage.setImage(image2file);&amp;#10;leftTrainingimage = image1file;&amp;#10;rightTrainingimage = image2file;&amp;#10;should_swap = (Math.random() &gt; 0.5);&amp;#10;if (should_swap) {&amp;#10;    leftImage.setImage(image2file);&amp;#10;    rightImage.setImage(image1file);&amp;#10;    [credit1t, credit2t] = [credit2t, credit1t];&amp;#10;    leftTrainingimage = image2file;&amp;#10;    rightTrainingimage = image1file;&amp;#10;    console.log(&quot;Randomly swapped images and credits: left &lt;-&gt; right &quot;);&amp;#10;}&amp;#10;console.log(`Trial ${(TrainingTrials.thisN + 1)}: Left = ${leftImage.image}, Right = ${rightImage.image}`);&amp;#10;console.log(`Trial ${(TrainingTrials.thisN + 1)}: ${TrainingTrials.trialList[TrainingTrials.thisN]}`);&amp;#10;response_made_training = false;&amp;#10;rt_clock_training.reset();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="print(&quot;Training&quot;)&amp;#10;&amp;#10;if TrainingTrials.thisN == 0:  # Shuffle trials manually&amp;#10;    shuffled_trials = TrainingTrials.trialList.slice()&amp;#10;    shuffle(shuffled_trials)&amp;#10;    TrainingTrials.trialList = shuffled_trials&amp;#10;&amp;#10;console.log(TrainingTrials.trialList);&amp;#10;&amp;#10;current_training_trial = TrainingTrials.trialList[TrainingTrials.thisN]&amp;#10;&amp;#10;image1file = current_training_trial['image1']&amp;#10;image2file = current_training_trial['image2']&amp;#10;&amp;#10;credit1t = int(current_training_trial['credit1'])&amp;#10;credit2t = int(current_training_trial['credit2'])&amp;#10;&amp;#10;# Default image assignment&amp;#10;leftImage.setImage(image1file)&amp;#10;rightImage.setImage(image2file)&amp;#10;&amp;#10;leftTrainingimage = image1file&amp;#10;rightTrainingimage = image2file&amp;#10;&amp;#10;should_swap = Math.random() &gt; 0.5&amp;#10;&amp;#10;if should_swap:&amp;#10;    leftImage.setImage(image2file)&amp;#10;    rightImage.setImage(image1file)&amp;#10;    credit1t, credit2t = credit2t, credit1t&amp;#10;    leftTrainingimage = image2file&amp;#10;    rightTrainingimage = image1file&amp;#10;    print(&quot;Randomly swapped images and credits: left &lt;-&gt; right &quot;)&amp;#10;&amp;#10;# Debugging&amp;#10;print(f&quot;Trial {TrainingTrials.thisN + 1}: Left = {leftImage.image}, Right = {rightImage.image}&quot;)&amp;#10;print(f&quot;Trial {TrainingTrials.thisN + 1}: {TrainingTrials.trialList[TrainingTrials.thisN]}&quot;)&amp;#10;&amp;#10;response_made_training = False&amp;#10;&amp;#10;rt_clock_training.reset()&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="print(response_made_training)&amp;#10;&amp;#10;keys_training = choice.keys &amp;#10;&amp;#10;# Check for participant response&amp;#10;if keys_training:&amp;#10;    &amp;#10;    response_made_training = True&amp;#10;    autoselection_training  = False&amp;#10;    print(f&quot;Keys detected: {keys_training}&quot;)&amp;#10;&amp;#10;    if 'left' in keys_training or 'l' in keys_training:&amp;#10;        selected_image = leftTrainingimage&amp;#10;        selected_credits = credit1t&amp;#10;    &amp;#10;    elif 'right' in keys_training or 'r' in keys_training:&amp;#10;        selected_image = rightTrainingimage&amp;#10;        selected_credits = credit2t&amp;#10;        &amp;#10;    print(f&quot;Image: {selected_image}, Credit: {int(selected_credits)}&quot;)&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;console.log(response_made_training);&amp;#10;keys_training = choice.keys;&amp;#10;if (keys_training) {&amp;#10;    response_made_training = true;&amp;#10;    autoselection_training = false;&amp;#10;    console.log(`Keys detected: ${keys_training}`);&amp;#10;    if ((_pj.in_es6(&quot;left&quot;, keys_training) || _pj.in_es6(&quot;l&quot;, keys_training))) {&amp;#10;        selected_image = leftTrainingimage;&amp;#10;        selected_credits = credit1t;&amp;#10;    } else {&amp;#10;        if ((_pj.in_es6(&quot;right&quot;, keys_training) || _pj.in_es6(&quot;r&quot;, keys_training))) {&amp;#10;            selected_image = rightTrainingimage;&amp;#10;            selected_credits = credit2t;&amp;#10;        }&amp;#10;    }&amp;#10;    console.log(`Image: ${selected_image}, Credit: ${Number.parseInt(selected_credits)}`);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((response_made_training === false)) {&amp;#10;    autoselection_training = true;&amp;#10;    console.log(`No response within time. Auto-selection applied.`);&amp;#10;    if ((credit1t &lt; credit2t)) {&amp;#10;        selected_image = leftTrainingimage;&amp;#10;        selected_credits = credit1t;&amp;#10;    } else {&amp;#10;        selected_image = rightTrainingimage;&amp;#10;        selected_credits = credit2t;&amp;#10;    }&amp;#10;    console.log(`Auto-selected image: ${selected_image}, Credit: ${Number.parseInt(selected_credits)}`);&amp;#10;}&amp;#10;if ((selected_credits === Math.max(credit1t, credit2t))) {&amp;#10;    correctchoice_training = 1;&amp;#10;} else {&amp;#10;    correctchoice_training = 0;&amp;#10;}&amp;#10;if ((response_made_training &amp;&amp; (correctchoice_training === 1))) {&amp;#10;    correct_trials_training += 1;&amp;#10;}&amp;#10;total_trials_training += 1;&amp;#10;psychoJS.experiment.addData(&quot;correctchoice_training&quot;, Number.parseInt(correctchoice_training));&amp;#10;psychoJS.experiment.addData(&quot;LeftImageTraining&quot;, leftTrainingimage);&amp;#10;psychoJS.experiment.addData(&quot;RightImageTraining&quot;, rightTrainingimage);&amp;#10;psychoJS.experiment.addData(&quot;leftcreditTraining&quot;, Number.parseInt(credit1t));&amp;#10;psychoJS.experiment.addData(&quot;rightcreditTraining&quot;, Number.parseInt(credit2t));&amp;#10;psychoJS.experiment.addData(&quot;SelectedImageTraining&quot;, selected_image);&amp;#10;psychoJS.experiment.addData(&quot;SelectedCreditTraining&quot;, Number.parseInt(selected_credits));&amp;#10;psychoJS.experiment.addData(&quot;reaction_time_training&quot;, (choice.rt ? choice.rt : &quot;No response&quot;));&amp;#10;psychoJS.experiment.addData(&quot;AutoSelectedTraining&quot;, autoselection_training);&amp;#10;creditsEarnedTraining += selected_credits;&amp;#10;psychoJS.experiment.addData(&quot;CreditsTraining&quot;, creditsEarnedTraining);&amp;#10;console.log(`Total Credits Earned So Far: ${Number.parseInt(creditsEarnedTraining)}`);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# If no response within 4s (auto-selection)&amp;#10;if response_made_training == False:&amp;#10;    autoselection_training  = True&amp;#10;    print(f&quot;No response within time. Auto-selection applied.&quot;)&amp;#10;    if credit1t &lt; credit2t:  &amp;#10;        selected_image = leftTrainingimage&amp;#10;        selected_credits = credit1t&amp;#10;    else:&amp;#10;        selected_image = rightTrainingimage&amp;#10;        selected_credits = credit2t&amp;#10;    print(f&quot;Auto-selected image: {selected_image}, Credit: {int(selected_credits)}&quot;)&amp;#10;&amp;#10;# Check if they selected the correct image&amp;#10;if selected_credits == max(credit1t, credit2t):&amp;#10;    correctchoice_training = 1&amp;#10;else:&amp;#10;    correctchoice_training = 0&amp;#10;&amp;#10;# But only count it if they responded manually (NOT auto-selected)&amp;#10;if response_made_training and correctchoice_training == 1:&amp;#10;    correct_trials_training += 1  # Increment correct responses manually made&amp;#10;total_trials_training += 1  # Count all trials&amp;#10;&amp;#10;# Save whether this trial was correct&amp;#10;thisExp.addData('correctchoice_training', int(correctchoice_training))&amp;#10;&amp;#10;# Log all image options shown in the trial&amp;#10;thisExp.addData('LeftImageTraining', leftTrainingimage)&amp;#10;thisExp.addData('RightImageTraining', rightTrainingimage)&amp;#10;&amp;#10;thisExp.addData('leftcreditTraining', int(credit1t))&amp;#10;thisExp.addData('rightcreditTraining', int(credit2t))&amp;#10;&amp;#10;# Log data&amp;#10;thisExp.addData('SelectedImageTraining', selected_image)&amp;#10;thisExp.addData('SelectedCreditTraining', int(selected_credits))&amp;#10;thisExp.addData('reaction_time_training', choice.rt if choice.rt else &quot;No response&quot;)&amp;#10;&amp;#10;thisExp.addData('AutoSelectedTraining', autoselection_training)&amp;#10;&amp;#10;# Update the total credits earned&amp;#10;creditsEarnedTraining += selected_credits&amp;#10;thisExp.addData('CreditsTraining', creditsEarnedTraining)&amp;#10;&amp;#10;# Debugging&amp;#10;print(f&quot;Total Credits Earned So Far: {int(creditsEarnedTraining)}&quot;)&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="autoSelect" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="TrainingFeedback">
      <RoutineSettingsComponent name="TrainingFeedback" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="TrainingFeedback" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="selectedImage" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$selected_image" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="selectedImage" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="creditsText" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="creditsText" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.37)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$creditsText.text" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="creditCounterTraining_2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="creditCounterTraining_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.65, 0.42)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;Total Credits: &quot; + str(creditsEarnedTraining)" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="code_3" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if (response_made_training) {&amp;#10;    creditsText.text = `+ ${Number.parseInt(selected_credits)} credits`;&amp;#10;    console.log(`Learning Part selected image: ${selected_image} with ${Number.parseInt(selected_credits)} credits.`);&amp;#10;}&amp;#10;if ((autoselection_training === true)) {&amp;#10;    creditsText.text = `No option chosen within 4 seconds.&amp;#10;Lowest reward (+ ${Number.parseInt(selected_credits)} credits) automatically selected.`&amp;#10;;&amp;#10;    console.log(`Learning Part AUTO-selected image: ${selected_image} with ${Number.parseInt(selected_credits)} credits.`);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# Auto-selection or participant-made response&amp;#10;if response_made_training: # Participant made a response in time&amp;#10;    creditsText.text = f&quot;+ {int(selected_credits)} credits&quot;&amp;#10;    print(f&quot;Learning Part selected image: {selected_image} with {int(selected_credits)} credits.&quot;)&amp;#10;&amp;#10;if autoselection_training == True:&amp;#10;    creditsText.text = f&quot;No option chosen within 4 seconds. \nLowest reward (+ {int(selected_credits)} credits) automatically selected.&quot;&amp;#10;    print(f&quot;Learning Part AUTO-selected image: {selected_image} with {int(selected_credits)} credits.&quot;)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_3" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="TrainingCredits">
      <RoutineSettingsComponent name="TrainingCredits" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="TrainingCredits" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="TrainingTotalCredits" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="TrainingTotalCredits" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_4" plugin="None">
        <Param val="['space']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_4" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_2" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="TrainingTotalCredits.text = &quot;&quot;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="TrainingTotalCredits.text = &quot;&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="console.log(`Training Credits: ${creditsEarnedTraining}`);&amp;#10;TrainingTotalCredits.text = `Learning has now finished.&amp;#10;You earned ${creditsEarnedTraining} credits during learning.&amp;#10;Press SPACE to continue.`&amp;#10;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="print(f&quot;Training Credits: {creditsEarnedTraining}&quot;)&amp;#10;TrainingTotalCredits.text = f&quot;Learning has now finished. \nYou earned {creditsEarnedTraining} credits during learning. \nPress SPACE to continue.&quot;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;FinalCreditsTraining&quot;, creditsEarnedTraining);&amp;#10;if ((total_trials_training &gt; 0)) {&amp;#10;    training_accuracy = (correct_trials_training / total_trials_training);&amp;#10;    psychoJS.experiment.addData(&quot;TrainingAccuracy&quot;, training_accuracy);&amp;#10;    console.log(`Training completed. Accuracy: ${util.pad(Number.parseFloat((training_accuracy * 100)).toFixed(2), 1)}% (${correct_trials_training}/${total_trials_training} correct)`);&amp;#10;} else {&amp;#10;    psychoJS.experiment.addData(&quot;TrainingAccuracy&quot;, 0);&amp;#10;    console.log(&quot;Training completed, but no manual trials were responded.&quot;);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="thisExp.addData('FinalCreditsTraining', creditsEarnedTraining)&amp;#10;&amp;#10;# Calculate training accuracy&amp;#10;if total_trials_training &gt; 0:&amp;#10;    training_accuracy = correct_trials_training / total_trials_training&amp;#10;    thisExp.addData('TrainingAccuracy', training_accuracy)&amp;#10;    print(f&quot;Training completed. Accuracy: {training_accuracy*100:.2f}% ({correct_trials_training}/{total_trials_training} correct)&quot;)&amp;#10;else:&amp;#10;    thisExp.addData('TrainingAccuracy', 0)&amp;#10;    print(&quot;Training completed, but no manual trials were responded.&quot;)&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="TrainingEnd">
      <RoutineSettingsComponent name="TrainingEnd" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="TrainingEnd" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_28" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_28" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="The Learning has now finished.&amp;#10;&amp;#10;You will start  the Training now.&amp;#10;&amp;#10;Press SPACE to continue." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_11" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_11" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="CheckPhasePrompt">
      <RoutineSettingsComponent name="CheckPhasePrompt" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="CheckPhasePrompt" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Are you ready to begin the Training?&amp;#10;&amp;#10;If yes, press Y. &amp;#10;If no, press N." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_5" plugin="None">
        <Param val="['y','n']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_5" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="CheckPhaseInstructions">
      <RoutineSettingsComponent name="CheckPhaseInstructions" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="CheckPhaseInstructions" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="You are now starting the Training!&amp;#10;&amp;#10;In the Training, you must choose the image with the higher credit on each trial. You must use LEFT ARROW (←) and RIGHT ARROW (→) keys to make selections with your RIGHT HAND.&amp;#10;&amp;#10;In this part, credits cannot be won as this is only to to assess your learning of the images before the Main Experiment begins. &amp;#10;&amp;#10;Once you reach 18 correct responses, this part will end automatically.&amp;#10;&amp;#10;Press SPACE to continue." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_6" plugin="None">
        <Param val="['space']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_6" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="CheckPhase">
      <RoutineSettingsComponent name="CheckPhase" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="CheckPhase" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="left" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$image1" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="left" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.3, -0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="right" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$image2" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="right" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.3, -0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <KeyboardComponent name="response" plugin="None">
        <Param val="['left','right', 'l', 'r']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="response" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_4" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="# Load the set randomly selected at the start&amp;#10;thisExp.addData('stimuli_file', stimuli_file)&amp;#10;&amp;#10;# Initialize variables&amp;#10;response_made_check = False&amp;#10;&amp;#10;CPfeedbackText = &quot;&quot;&amp;#10;&amp;#10;correct_responses_cp = 0&amp;#10;incorrect_responses_cp = 0&amp;#10;&amp;#10;check_phase_completed = False&amp;#10;check_phase_failed = False&amp;#10;&amp;#10;# Initialize RT clock&amp;#10;rt_clock_check = core.Clock() &amp;#10;response.keys = []&amp;#10;response.rt = None&amp;#10;&amp;#10;# initialize variables for recycling incorrect trials&amp;#10;incorrect_trials = []  # List to store incorrect trials&amp;#10;all_trials = []  # List to store all original trials&amp;#10;recycled_index = 0  # Custom counter for recycled trials&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;stimuli_file&quot;, stimuli_file);&amp;#10;response_made_check = false;&amp;#10;CPfeedbackText = &quot;&quot;;&amp;#10;correct_responses_cp = 0;&amp;#10;incorrect_responses_cp = 0;&amp;#10;check_phase_completed = false;&amp;#10;check_phase_failed = false;&amp;#10;rt_clock_check = new util.Clock();&amp;#10;response.keys = [];&amp;#10;response.rt = null;&amp;#10;incorrect_trials = [];&amp;#10;all_trials = [];&amp;#10;recycled_index = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="console.log(`Check Phase started`);&amp;#10;console.log(`Randomly assigned stimuli set: ${stimuli_file}`);&amp;#10;response_made_check = false;&amp;#10;rt_clock_check.reset();&amp;#10;if ((CheckPhaseTrials.thisN === 0)) {&amp;#10;    shuffled_trials = CheckPhaseTrials.trialList.slice();&amp;#10;    util.shuffle(shuffled_trials);&amp;#10;    CheckPhaseTrials.trialList = shuffled_trials;&amp;#10;}&amp;#10;if ((CheckPhaseTrials.thisN === 0)) {&amp;#10;    all_trials = CheckPhaseTrials.trialList.slice();&amp;#10;}&amp;#10;left.setImage(CheckPhaseTrials.trialList[CheckPhaseTrials.thisN][&quot;image1&quot;]);&amp;#10;right.setImage(CheckPhaseTrials.trialList[CheckPhaseTrials.thisN][&quot;image2&quot;]);&amp;#10;firstcredit = Number.parseInt(CheckPhaseTrials.trialList[CheckPhaseTrials.thisN][&quot;credit1&quot;]);&amp;#10;secondcredit = Number.parseInt(CheckPhaseTrials.trialList[CheckPhaseTrials.thisN][&quot;credit2&quot;]);&amp;#10;should_swap = (Math.random() &gt; 0.5);&amp;#10;if (should_swap) {&amp;#10;    [left.image, right.image] = [right.image, left.image];&amp;#10;    [firstcredit, secondcredit] = [secondcredit, firstcredit];&amp;#10;    console.log(&quot;Randomly swapped images and credits: left &lt;-&gt; right &quot;);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="print(f&quot;Check Phase started&quot;)&amp;#10;print(f&quot;Randomly assigned stimuli set: {stimuli_file}&quot;)&amp;#10;&amp;#10;# Clear and reset previous responses&amp;#10;response_made_check = False&amp;#10;&amp;#10;# Start RT clock&amp;#10;rt_clock_check.reset()  &amp;#10;&amp;#10;#####&amp;#10;if CheckPhaseTrials.thisN == 0:  # Shuffle trials manually&amp;#10;    shuffled_trials = CheckPhaseTrials.trialList.slice()&amp;#10;    shuffle(shuffled_trials)&amp;#10;    CheckPhaseTrials.trialList = shuffled_trials&amp;#10;&amp;#10;# At the beginning of the first trial, to store the original trial list&amp;#10;if CheckPhaseTrials.thisN == 0:  # Only run once at the start of the loop&amp;#10;    all_trials = CheckPhaseTrials.trialList.slice()  # Save the original trial list&amp;#10;&amp;#10;# Assign credits and images&amp;#10;left.setImage(CheckPhaseTrials.trialList[CheckPhaseTrials.thisN]['image1'])&amp;#10;right.setImage(CheckPhaseTrials.trialList[CheckPhaseTrials.thisN]['image2'])&amp;#10;&amp;#10;# corresponding credits&amp;#10;firstcredit = int(CheckPhaseTrials.trialList[CheckPhaseTrials.thisN]['credit1'])&amp;#10;secondcredit = int(CheckPhaseTrials.trialList[CheckPhaseTrials.thisN]['credit2'])&amp;#10;&amp;#10;# Randomly swap left and right images for the current trial&amp;#10;should_swap = Math.random() &gt; 0.5  # Online version (JavaScript)&amp;#10;&amp;#10;if should_swap:&amp;#10;    left.image, right.image = right.image, left.image&amp;#10;    firstcredit, secondcredit = secondcredit, firstcredit&amp;#10;    print(&quot;Randomly swapped images and credits: left &lt;-&gt; right &quot;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if (response.keys) {&amp;#10;    response_made_check = true;&amp;#10;    if ((((response.keys === &quot;left&quot;) || (response.keys === &quot;l&quot;)) &amp;&amp; (firstcredit &gt; secondcredit))) {&amp;#10;        CPfeedbackText = &quot;Correct&quot;;&amp;#10;        correct_responses_cp += 1;&amp;#10;        console.log(`Feedback set to: Correct, selected image: ${left.image}`);&amp;#10;    } else {&amp;#10;        if ((((response.keys === &quot;right&quot;) || (response.keys === &quot;r&quot;)) &amp;&amp; (secondcredit &gt; firstcredit))) {&amp;#10;            CPfeedbackText = &quot;Correct&quot;;&amp;#10;            correct_responses_cp += 1;&amp;#10;            console.log(`Feedback set to:Correct, selected image: ${right.image}`);&amp;#10;        } else {&amp;#10;            CPfeedbackText = &quot;Incorrect&quot;;&amp;#10;            incorrect_responses_cp += 1;&amp;#10;            incorrect_trials.push(CheckPhaseTrials.trialList[CheckPhaseTrials.thisN]);&amp;#10;            console.log(`Feedback set to: Incorrect. Trial recycled (incorrect response): ${CheckPhaseTrials.trialList[CheckPhaseTrials.thisN]}`);&amp;#10;        }&amp;#10;    }&amp;#10;} else {&amp;#10;    response_made_check = false;&amp;#10;    incorrect_responses_cp += 1;&amp;#10;    CPfeedbackText = &quot;No response within time. Please make a choice within 4 seconds.&quot;;&amp;#10;    incorrect_trials.push(CheckPhaseTrials.trialList[CheckPhaseTrials.thisN]);&amp;#10;    console.log(`Trial recycled (incorrect response): ${CheckPhaseTrials.trialList[CheckPhaseTrials.thisN]}`);&amp;#10;}&amp;#10;if (((CheckPhaseTrials.thisN === (all_trials.length - 1)) &amp;&amp; (incorrect_trials.length &gt; 0))) {&amp;#10;    CheckPhaseTrials.trialList = CheckPhaseTrials.trialList.concat(incorrect_trials);&amp;#10;    console.log(`Incorrect trials added back to trial list: ${incorrect_trials}`);&amp;#10;    incorrect_trials = [];&amp;#10;}&amp;#10;if ((correct_responses_cp &gt;= 18)) {&amp;#10;    check_phase_completed = true;&amp;#10;    CheckPhaseTrials.finished = true;&amp;#10;    continueRoutine = false;&amp;#10;    console.log(&quot;Check phase complete: 18 correct responses reached.&quot;);&amp;#10;} else {&amp;#10;    if (((CheckPhaseTrials.thisN &gt;= 36) &amp;&amp; (correct_responses_cp &lt; 18))) {&amp;#10;        check_phase_failed = true;&amp;#10;        CheckPhaseTrials.finished = true;&amp;#10;        continueRoutine = false;&amp;#10;        console.log(&quot;Check phase failed: 36 trials used without reaching 18 correct.&quot;);&amp;#10;    }&amp;#10;}&amp;#10;total_trials_cp = (correct_responses_cp + incorrect_responses_cp);&amp;#10;accuracy_cp = (correct_responses_cp / total_trials_cp);&amp;#10;console.log(&quot;Correct Responses count:&quot;, correct_responses_cp);&amp;#10;console.log(&quot;Incorrect Responses count:&quot;, incorrect_responses_cp);&amp;#10;psychoJS.experiment.addData(&quot;CheckPhase_TotalTrials&quot;, total_trials_cp);&amp;#10;psychoJS.experiment.addData(&quot;CheckPhase_Accuracy&quot;, accuracy_cp);&amp;#10;psychoJS.experiment.addData(&quot;LeftImageCP&quot;, left.image);&amp;#10;psychoJS.experiment.addData(&quot;RightImageCP&quot;, right.image);&amp;#10;psychoJS.experiment.addData(&quot;leftCPcredit&quot;, firstcredit);&amp;#10;psychoJS.experiment.addData(&quot;rightCPcredit&quot;, secondcredit);&amp;#10;psychoJS.experiment.addData(&quot;reaction_time_cp&quot;, response.rt);&amp;#10;psychoJS.experiment.addData(&quot;key_cp&quot;, response.keys);&amp;#10;psychoJS.experiment.addData(&quot;CorrectCheckPhaseResponses&quot;, correct_responses_cp);&amp;#10;psychoJS.experiment.addData(&quot;IncorrectCheckPhaseResponses&quot;, incorrect_responses_cp);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# Check if a response was made&amp;#10;if response.keys:&amp;#10;    response_made_check = True&amp;#10;    # Check if choice matches the higher credit image&amp;#10;    if (response.keys == 'left' or response.keys == 'l') and firstcredit &gt; secondcredit:&amp;#10;        CPfeedbackText = &quot;Correct&quot;&amp;#10;        correct_responses_cp += 1&amp;#10;        print(f&quot;Feedback set to: Correct, selected image: {left.image}&quot;)&amp;#10;    elif (response.keys == 'right' or response.keys == 'r') and secondcredit &gt; firstcredit:&amp;#10;        CPfeedbackText = &quot;Correct&quot;&amp;#10;        correct_responses_cp += 1&amp;#10;        print(f&quot;Feedback set to:Correct, selected image: {right.image}&quot;)&amp;#10;    else:&amp;#10;        CPfeedbackText = &quot;Incorrect&quot;&amp;#10;        incorrect_responses_cp += 1&amp;#10;        incorrect_trials.append(CheckPhaseTrials.trialList[CheckPhaseTrials.thisN])  # Recycle this trial&amp;#10;        print(f&quot;Feedback set to: Incorrect. Trial recycled (incorrect response): {CheckPhaseTrials.trialList[CheckPhaseTrials.thisN]}&quot;)&amp;#10;else:&amp;#10;    # No response made within 4 seconds&amp;#10;    response_made_check = False&amp;#10;    incorrect_responses_cp += 1&amp;#10;    CPfeedbackText = &quot;No response within time. Please make a choice within 4 seconds.&quot;&amp;#10;    incorrect_trials.append(CheckPhaseTrials.trialList[CheckPhaseTrials.thisN])  # Recycle this trial&amp;#10;    print(f&quot;Trial recycled (incorrect response): {CheckPhaseTrials.trialList[CheckPhaseTrials.thisN]}&quot;)&amp;#10;&amp;#10;# Recycle incorrect trials if all original trials are exhausted&amp;#10;if CheckPhaseTrials.thisN == len(all_trials) - 1 and len(incorrect_trials) &gt; 0:&amp;#10;    CheckPhaseTrials.trialList = CheckPhaseTrials.trialList.concat(incorrect_trials)  # Get incorrect trials back&amp;#10;    print(f&quot;Incorrect trials added back to trial list: {incorrect_trials}&quot;)&amp;#10;    incorrect_trials = []  # Reset the incorrect trials list&amp;#10;&amp;#10;if correct_responses_cp &gt;= 18:&amp;#10;    check_phase_completed = True&amp;#10;    CheckPhaseTrials.finished = True&amp;#10;    continueRoutine = False&amp;#10;    print(&quot;Check phase complete: 18 correct responses reached.&quot;)&amp;#10;elif CheckPhaseTrials.thisN &gt;= 36 and correct_responses_cp &lt; 18:&amp;#10;    check_phase_failed = True&amp;#10;    CheckPhaseTrials.finished = True&amp;#10;    continueRoutine = False&amp;#10;    print(&quot;Check phase failed: 36 trials used without reaching 18 correct.&quot;)&amp;#10;&amp;#10;# Calculate total trials and accuracy&amp;#10;total_trials_cp = correct_responses_cp + incorrect_responses_cp&amp;#10;accuracy_cp = correct_responses_cp / total_trials_cp&amp;#10;&amp;#10;print(&quot;Correct Responses count:&quot;, correct_responses_cp)&amp;#10;print(&quot;Incorrect Responses count:&quot;, incorrect_responses_cp)&amp;#10;&amp;#10;# Log total trials and accuracy at Check Phase&amp;#10;thisExp.addData('CheckPhase_TotalTrials', total_trials_cp)&amp;#10;thisExp.addData('CheckPhase_Accuracy', accuracy_cp)&amp;#10;&amp;#10;# Log trial data&amp;#10;thisExp.addData('LeftImageCP', left.image)&amp;#10;thisExp.addData('RightImageCP', right.image)&amp;#10;thisExp.addData('leftCPcredit', firstcredit)&amp;#10;thisExp.addData('rightCPcredit', secondcredit)&amp;#10;&amp;#10;thisExp.addData('reaction_time_cp', response.rt)&amp;#10;thisExp.addData('key_cp', response.keys)&amp;#10;&amp;#10;thisExp.addData(&quot;CorrectCheckPhaseResponses&quot;, correct_responses_cp)&amp;#10;thisExp.addData(&quot;IncorrectCheckPhaseResponses&quot;, incorrect_responses_cp)&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_4" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="CheckPhaseFeedback">
      <RoutineSettingsComponent name="CheckPhaseFeedback" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="CheckPhaseFeedback" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_6" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="feedback_text.text = CPfeedbackText;&amp;#10;console.log(`Check Phase feedback: ${CPfeedbackText}`);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="feedback_text.text = CPfeedbackText&amp;#10;print(f&quot;Check Phase feedback: {CPfeedbackText}&quot;)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_6" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="feedback_text" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="feedback_text" valType="code" updates="None" name="name"/>
        <Param val="1" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$CPfeedbackText" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="CheckPhaseEnd">
      <RoutineSettingsComponent name="CheckPhaseEnd" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="CheckPhaseEnd" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_3" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_3" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Training has now finished.&amp;#10;&amp;#10;You will start  the MAIN EXPERIMENT now.&amp;#10;&amp;#10;Press SPACE to continue." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_12" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_12" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_22" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;CheckPhase_TotalTrials&quot;, total_trials_cp);&amp;#10;psychoJS.experiment.addData(&quot;CheckPhase_Accuracy&quot;, accuracy_cp);&amp;#10;console.log(`Check Phase completed in ${total_trials_cp} trials with ${util.pad(Number.parseFloat((accuracy_cp * 100)).toFixed(2), 1)}% accuracy.`);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="print(f&quot;Check Phase completed in {total_trials_cp} trials with {accuracy_cp*100:.2f}% accuracy.&quot;)&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_22" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="MainPrompt">
      <RoutineSettingsComponent name="MainPrompt" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="MainPrompt" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_4" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_4" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Are you ready to begin the Main Experiment?&amp;#10;&amp;#10;If yes, press Y. &amp;#10;If no, press N." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_7" plugin="None">
        <Param val="['y','n']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_7" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="MainInstructions">
      <RoutineSettingsComponent name="MainInstructions" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="MainInstructions" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_5" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_5" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="You are about to start the Main Experiment!&amp;#10;&amp;#10;The experiment consists of 8 blocks of 20 trials. &amp;#10;You will again be offered a choice between previously learned images, which corresponds to an amount of credits that will count towards the final bonus payment. &amp;#10;&amp;#10;Choices will consist of two or three options, selected using the LEFT (←), RIGHT (→) and UP (↑) arrow keys on the keyboard using your RIGHT HAND.&amp;#10;&amp;#10;You will have 2.5 seconds to make your choice, otherwise the lowest value option will be automatically selected. &amp;#10;&amp;#10;Press SPACE to proceed.&amp;#10;" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_8" plugin="None">
        <Param val="['space']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_8" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="ComprehensionCheckMain1">
      <RoutineSettingsComponent name="ComprehensionCheckMain1" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="ComprehensionCheckMain1" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_20" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_20" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="How many seconds do you have to make a choice in the main experiment ?&amp;#10;&amp;#10;(A) 1 second&amp;#10;(B) 2.5 seconds&amp;#10;(C) 4 seconds" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_26" plugin="None">
        <Param val="['a','b','c']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_26" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="ComprehensionCheckMain2">
      <RoutineSettingsComponent name="ComprehensionCheckMain2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="ComprehensionCheckMain2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_26" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_26" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Which key do you press to select the left image?&amp;#10;&amp;#10;(A) Left arrow&amp;#10;(B) Right arrow&amp;#10;(C) Up arrow" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_33" plugin="None">
        <Param val="['a','b','c']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_33" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="comprehensionresult">
      <RoutineSettingsComponent name="comprehensionresult" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="comprehensionresult" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_27" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_27" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_34" plugin="None">
        <Param val="['space']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_34" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_32" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="comprehension_main_correct = False" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="comprehension_main_correct = false;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="correct_answers_main = {&quot;key_resp_26&quot;: &quot;b&quot;, &quot;key_resp_33&quot;: &quot;a&quot;};&amp;#10;responses_main = [key_resp_26.keys, key_resp_33.keys];&amp;#10;correct_main = [(responses_main[0] === correct_answers_main[&quot;key_resp_26&quot;]), (responses_main[1] === correct_answers_main[&quot;key_resp_33&quot;])];&amp;#10;if ((util.sum(correct_main) === correct_main.length)) {&amp;#10;    text_27.text = &quot;All answers are correct! Press SPACE to continue.&quot;;&amp;#10;    comprehension_main_correct = true;&amp;#10;} else {&amp;#10;    text_27.text = &quot;Some answers are incorrect. Please press SPACE to try again.&quot;;&amp;#10;    comprehension_main_correct = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# Correct answers for the questions&amp;#10;correct_answers_main = {'key_resp_26':'b', 'key_resp_33':'a'}&amp;#10;&amp;#10;# Check if all answers are correct&amp;#10;responses_main = [key_resp_26.keys, key_resp_33.keys]&amp;#10;correct_main = [responses_main[0] == correct_answers_main['key_resp_26'], responses_main[1] == correct_answers_main['key_resp_33']]&amp;#10;&amp;#10;# Create feedback message&amp;#10;if sum(correct_main) == len(correct_main):  &amp;#10;    text_27.text = &quot;All answers are correct! Press SPACE to continue.&quot;&amp;#10;    comprehension_main_correct = True&amp;#10;else:&amp;#10;    text_27.text = &quot;Some answers are incorrect. Please press SPACE to try again.&quot;&amp;#10;    comprehension_main_correct = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if (comprehension_main_correct) {&amp;#10;    comprehensionloop.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# Exit the loop if all answers are correct&amp;#10;if comprehension_main_correct:&amp;#10;    comprehensionloop.finished = True&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_32" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Blocks">
      <RoutineSettingsComponent name="Blocks" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Blocks" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_24" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="blockNumber = 1  # Start with Block 1&amp;#10;trialCount = 0 &amp;#10;&amp;#10;# Define the number of trials per block&amp;#10;blockSizes = [20, 21, 20, 21, 20, 21, 20, 21]  # 8 blocks in total&amp;#10;currentBlockSize = blockSizes[blockNumber - 1]  # Set the size for Block 1&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="blockNumber = 1;&amp;#10;trialCount = 0;&amp;#10;blockSizes = [20, 21, 20, 21, 20, 21, 20, 21];&amp;#10;currentBlockSize = blockSizes[(blockNumber - 1)];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((trialCount &lt; currentBlockSize)) {&amp;#10;    continueRoutine = false;&amp;#10;} else {&amp;#10;    trialCount = 0;&amp;#10;    blockNumber += 1;&amp;#10;    if ((blockNumber &lt;= blockSizes.length)) {&amp;#10;        currentBlockSize = blockSizes[(blockNumber - 1)];&amp;#10;    }&amp;#10;    console.log(`Starting Block ${blockNumber}`);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if trialCount &lt; currentBlockSize:  # If the block isn't finished, skip the break&amp;#10;    continueRoutine = False  # Skip this break screen&amp;#10;else:&amp;#10;    trialCount = 0  # Reset trial count for the next block&amp;#10;    blockNumber += 1  # Move to the next one&amp;#10;&amp;#10;    if blockNumber &lt;= len(blockSizes):  # Ensure we don't go beyond the last block&amp;#10;        #blockNumber += 1  # Move to the next block&amp;#10;        currentBlockSize = blockSizes[blockNumber - 1]  # Update trial count for the next block&amp;#10;&amp;#10;    print(f&quot;Starting Block {blockNumber}&quot;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_24" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="blockText" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="blockText" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;Starting Block &quot; + str(blockNumber) + &quot;. Press SPACE to continue.&quot;" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_9" plugin="None">
        <Param val="['space']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_9" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="MainExp">
      <RoutineSettingsComponent name="MainExp" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="MainExp" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_23" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="# initialize lists&amp;#10;shuffled_trials = []  &amp;#10;attention_check_trials = [] &amp;#10;regular_trials = [] &amp;#10;attention_trial = []&amp;#10;blocks = [] &amp;#10;block_size = 20&amp;#10;start_idx = 0&amp;#10;end_idx = 0&amp;#10;&amp;#10;&amp;#10;correct_trials_main = 0  # Correct choices during main experiment&amp;#10;total_trials_main = 0    # Total manually responded trials&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="shuffled_trials = [];&amp;#10;attention_check_trials = [];&amp;#10;regular_trials = [];&amp;#10;attention_trial = [];&amp;#10;blocks = [];&amp;#10;block_size = 20;&amp;#10;start_idx = 0;&amp;#10;end_idx = 0;&amp;#10;correct_trials_main = 0;&amp;#10;total_trials_main = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if ((MainExpTrials.thisN === 0)) {&amp;#10;    attention_check_trials = [];&amp;#10;    regular_trials = [];&amp;#10;    for (var trial, _pj_c = 0, _pj_a = MainExpTrials.trialList, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;        trial = _pj_a[_pj_c];&amp;#10;        if ((_pj.in_es6(&quot;text_attention&quot;, trial) &amp;&amp; (trial[&quot;text_attention&quot;] === 1))) {&amp;#10;            attention_check_trials.push(trial);&amp;#10;        } else {&amp;#10;            regular_trials.push(trial);&amp;#10;        }&amp;#10;    }&amp;#10;    console.log(`Number of regular trials: ${regular_trials.length}`);&amp;#10;    console.log(`Number of attention check trials: ${attention_check_trials.length}`);&amp;#10;    util.shuffle(regular_trials);&amp;#10;    console.log(`Regular trials shuffled, number of regular trials: ${regular_trials.length}`);&amp;#10;    blocks = [];&amp;#10;    attention_check_counter = 0;&amp;#10;    block_size = 20;&amp;#10;    for (var block_num, _pj_c = 0, _pj_a = util.range(8), _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;        block_num = _pj_a[_pj_c];&amp;#10;        block = [];&amp;#10;        console.log(`Block size = ${block_size}`);&amp;#10;        start_idx = (block_num * block_size);&amp;#10;        end_idx = Math.min(((block_num + 1) * block_size), regular_trials.length);&amp;#10;        block = regular_trials.slice(start_idx, end_idx);&amp;#10;        console.log(`Block ${(block_num + 1)} | start_idx = ${start_idx}, end_idx = ${end_idx}`);&amp;#10;        console.log(`Block ${(block_num + 1)}: ${block.length} regular trials assigned.`);&amp;#10;        if ((((block_num % 2) === 1) &amp;&amp; (attention_check_counter &lt; attention_check_trials.length))) {&amp;#10;            attention_trial = attention_check_trials[attention_check_counter];&amp;#10;            attention_check_counter += 1;&amp;#10;            block.push(attention_trial);&amp;#10;            console.log(`Added attention trial to Block ${(block_num + 1)}`);&amp;#10;        }&amp;#10;        util.shuffle(block);&amp;#10;        console.log(`Block ${(block_num + 1)} shuffled.`);&amp;#10;        if ((block.length &gt; 0)) {&amp;#10;            blocks.push(block);&amp;#10;        } else {&amp;#10;            console.log(`Warning: Block ${(block_num + 1)} is empty, skipping.`);&amp;#10;        }&amp;#10;    }&amp;#10;    shuffled_trials = [];&amp;#10;    console.log(`Before adding blocks: shuffled_trials contains ${shuffled_trials.length} trials`);&amp;#10;    block_number = 1;&amp;#10;    for (var block, _pj_c = 0, _pj_a = blocks, _pj_b = _pj_a.length; (_pj_c &lt; _pj_b); _pj_c += 1) {&amp;#10;        block = _pj_a[_pj_c];&amp;#10;        if ((block.length &gt; 0)) {&amp;#10;            console.log(`Adding ${block.length} trials from Block ${block_number} to shuffled_trials.`);&amp;#10;            for (var trial, _pj_f = 0, _pj_d = block, _pj_e = _pj_d.length; (_pj_f &lt; _pj_e); _pj_f += 1) {&amp;#10;                trial = _pj_d[_pj_f];&amp;#10;                shuffled_trials.push(trial);&amp;#10;            }&amp;#10;        } else {&amp;#10;            console.log(`Warning: Block ${block_number} is empty, skipping.`);&amp;#10;        }&amp;#10;        block_number += 1;&amp;#10;    }&amp;#10;    console.log(`After adding blocks: shuffled_trials contains ${shuffled_trials.length} trials`);&amp;#10;    shuffled_trials = function () {&amp;#10;    var _pj_a = [], _pj_b = shuffled_trials;&amp;#10;    for (var _pj_c = 0, _pj_d = _pj_b.length; (_pj_c &lt; _pj_d); _pj_c += 1) {&amp;#10;        var trial = _pj_b[_pj_c];&amp;#10;        if ((trial !== null)) {&amp;#10;            _pj_a.push(trial);&amp;#10;        }&amp;#10;    }&amp;#10;    return _pj_a;&amp;#10;}&amp;#10;.call(this);&amp;#10;    console.log(`After filtering: shuffled_trials contains ${shuffled_trials.length} trials`);&amp;#10;    if ((shuffled_trials.length !== 164)) {&amp;#10;        console.log(`ERROR: Expected 164 trials, but found ${shuffled_trials.length}!`);&amp;#10;    }&amp;#10;    MainExpTrials.trialList = shuffled_trials;&amp;#10;}&amp;#10;console.log(`Final Trial List contains ${MainExpTrials.trialList.length} trials.`);&amp;#10;if (((MainExpTrials.thisTrialN !== null) &amp;&amp; (MainExpTrials.thisTrialN &lt; MainExpTrials.trialList.length))) {&amp;#10;    current_trial = MainExpTrials.trialList[MainExpTrials.thisTrialN];&amp;#10;    if ((_pj.in_es6(&quot;text_attention&quot;, current_trial) &amp;&amp; (current_trial[&quot;text_attention&quot;] === 1))) {&amp;#10;        attention_text = &quot;SELECT THE IMAGE ON THE RIGHT&quot;;&amp;#10;    } else {&amp;#10;        attention_text = &quot;&quot;;&amp;#10;    }&amp;#10;    console.log(`Is trial ${MainExpTrials.thisTrialN} an attention check trial?: ${attention_text}`);&amp;#10;} else {&amp;#10;    console.log(`WARNING: Trial index ${MainExpTrials.thisTrialN} is out of range!`);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if MainExpTrials.thisN == 0:  # execute only once at the start&amp;#10;    attention_check_trials = []  &amp;#10;    regular_trials = []  &amp;#10;&amp;#10;    # Separate regular trials and attention check trials&amp;#10;    for trial in MainExpTrials.trialList:&amp;#10;        if 'text_attention' in trial and trial['text_attention'] == 1:&amp;#10;            attention_check_trials.append(trial)&amp;#10;        else:&amp;#10;            regular_trials.append(trial)&amp;#10;&amp;#10;    print(f&quot;Number of regular trials: {len(regular_trials)}&quot;)&amp;#10;    print(f&quot;Number of attention check trials: {len(attention_check_trials)}&quot;)&amp;#10;&amp;#10;    # Shuffle regular trials&amp;#10;    shuffle(regular_trials)  &amp;#10;    print(f&quot;Regular trials shuffled, number of regular trials: {len(regular_trials)}&quot;)&amp;#10;    &amp;#10;    blocks = []&amp;#10;    attention_check_counter = 0&amp;#10;    block_size = 20&amp;#10;&amp;#10;    for block_num in range(8):&amp;#10;        block = []&amp;#10;&amp;#10;        print(f&quot;Block size = {block_size}&quot;)&amp;#10;&amp;#10;        # Assign regular trials&amp;#10;        start_idx = block_num * block_size&amp;#10;        end_idx = min((block_num + 1) * block_size, len(regular_trials))&amp;#10;        block = regular_trials[start_idx:end_idx]  &amp;#10;&amp;#10;        print(f&quot;Block {block_num + 1} | start_idx = {start_idx}, end_idx = {end_idx}&quot;)&amp;#10;        print(f&quot;Block {block_num + 1}: {len(block)} regular trials assigned.&quot;)&amp;#10;&amp;#10;        # Add attention check trials to Blocks 2, 4, 6, 8&amp;#10;        if block_num % 2 == 1 and attention_check_counter &lt; len(attention_check_trials):&amp;#10;            attention_trial = attention_check_trials[attention_check_counter]&amp;#10;            attention_check_counter += 1&amp;#10;            block.append(attention_trial)&amp;#10;            print(f&quot;Added attention trial to Block {block_num + 1}&quot;)&amp;#10;&amp;#10;        shuffle(block)&amp;#10;        print(f&quot;Block {block_num + 1} shuffled.&quot;)&amp;#10;&amp;#10;        # Append only non-empty blocks&amp;#10;        if len(block) &gt; 0:&amp;#10;            blocks.append(block)&amp;#10;        else:&amp;#10;            print(f&quot;Warning: Block {block_num + 1} is empty, skipping.&quot;)&amp;#10;&amp;#10;    # Flatten all blocks into shuffled_trials&amp;#10;    shuffled_trials = []&amp;#10;    &amp;#10;    print(f&quot;Before adding blocks: shuffled_trials contains {len(shuffled_trials)} trials&quot;)&amp;#10;    &amp;#10;    block_number = 1&amp;#10;&amp;#10;    for block in blocks:&amp;#10;        if len(block) &gt; 0:&amp;#10;            print(f&quot;Adding {len(block)} trials from Block {block_number} to shuffled_trials.&quot;)&amp;#10;            for trial in block: # Add trials one by one because of the errors&amp;#10;                shuffled_trials.append(trial)&amp;#10;        else:&amp;#10;            print(f&quot;Warning: Block {block_number} is empty, skipping.&quot;)&amp;#10;        block_number += 1  &amp;#10;&amp;#10;    print(f&quot;After adding blocks: shuffled_trials contains {len(shuffled_trials)} trials&quot;)&amp;#10;&amp;#10;    # add this step - Ensure no `None` trials exist because of js error&amp;#10;    shuffled_trials = [trial for trial in shuffled_trials if trial is not None]&amp;#10;&amp;#10;    print(f&quot;After filtering: shuffled_trials contains {len(shuffled_trials)} trials&quot;)&amp;#10;&amp;#10;    # Check the final trial count just in case&amp;#10;    if len(shuffled_trials) != 164:&amp;#10;        print(f&quot;ERROR: Expected 164 trials, but found {len(shuffled_trials)}!&quot;)&amp;#10;&amp;#10;    # Assign shuffled trials back to exp&amp;#10;    MainExpTrials.trialList = shuffled_trials&amp;#10;&amp;#10;print(f&quot;Final Trial List contains {len(MainExpTrials.trialList)} trials.&quot;)&amp;#10;&amp;#10;# Attention trials&amp;#10;if MainExpTrials.thisTrialN is not None and MainExpTrials.thisTrialN &lt; len(MainExpTrials.trialList):&amp;#10;    current_trial = MainExpTrials.trialList[MainExpTrials.thisTrialN]  # Get current trial&amp;#10;    &amp;#10;    if 'text_attention' in current_trial and current_trial['text_attention'] == 1:&amp;#10;        attention_text = &quot;SELECT THE IMAGE ON THE RIGHT&quot;&amp;#10;    else:&amp;#10;        attention_text = &quot;&quot;  # No attention text for regular trials&amp;#10;&amp;#10;    print(f&quot;Is trial {MainExpTrials.thisTrialN} an attention check trial?: {attention_text}&quot;)&amp;#10;else:&amp;#10;    print(f&quot;WARNING: Trial index {MainExpTrials.thisTrialN} is out of range!&quot;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;attention&quot;, current_trial[&quot;text_attention&quot;]);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="thisExp.addData('attention', current_trial['text_attention'])&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_23" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="attention" plugin="None">
        <Param val="1.0000, 1.0000, -1.0000" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.06" valType="num" updates="constant" name="letterHeight"/>
        <Param val="attention" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$attention_text&amp;#10;" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="leftimage" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$image1" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="leftimage" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.3, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="rightimage" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$image2" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="rightimage" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.3, -0.3)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="upperimage" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$image3" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="upperimage" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.1)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <KeyboardComponent name="selection" plugin="None">
        <Param val="['left','right','up','l','r']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="2.5" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="selection" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="creditCounterMain" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="creditCounterMain" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.65, 0.42)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;Total Credits: &quot; + str(creditsEarned)" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="code_8" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="# Initialize variables&amp;#10;creditsEarned = 0  # Total credits during main exp&amp;#10;response_made = False&amp;#10;chosenimage = &quot;grey.png&quot;&amp;#10;chosencredit = 0&amp;#10;totalCredits= 0&amp;#10;&amp;#10;auto_selection = False # Tracking auto-selection status?&amp;#10;&amp;#10;attention_text = &quot;&quot;&amp;#10;&amp;#10;rt_clock = core.Clock()&amp;#10;&amp;#10;selection.keys = []&amp;#10;selection.rt = None&amp;#10;&amp;#10;# initialize variable in case of timeout&amp;#10;timed_out_trials = []&amp;#10;&amp;#10;# Initialize a set for unique stimuli choices&amp;#10;# unique_stimuli = []&amp;#10;&amp;#10;# Define a compatibility flag&amp;#10;#is_online = 'psychoJS' in globals()&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="creditsEarned = 0;&amp;#10;response_made = false;&amp;#10;chosenimage = &quot;grey.png&quot;;&amp;#10;chosencredit = 0;&amp;#10;totalCredits = 0;&amp;#10;auto_selection = false;&amp;#10;attention_text = &quot;&quot;;&amp;#10;rt_clock = new util.Clock();&amp;#10;selection.keys = [];&amp;#10;selection.rt = null;&amp;#10;timed_out_trials = [];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;rt_clock.reset();&amp;#10;if ((MainExpTrials.trialList &amp;&amp; ((0 &lt;= MainExpTrials.thisN) &amp;&amp; (MainExpTrials.thisN &lt; MainExpTrials.trialList.length)))) {&amp;#10;    current_trial = MainExpTrials.trialList[MainExpTrials.thisN];&amp;#10;    console.log(`Current Trial Index: ${MainExpTrials.thisN}`);&amp;#10;} else {&amp;#10;    console.log(&quot;Error: Trial list is empty or thisN is out of range!&quot;);&amp;#10;}&amp;#10;leftimage.setImage(current_trial[&quot;image1&quot;]);&amp;#10;rightimage.setImage(current_trial[&quot;image2&quot;]);&amp;#10;if ((_pj.in_es6(&quot;image3&quot;, current_trial) &amp;&amp; current_trial[&quot;image3&quot;])) {&amp;#10;    upperimage.setImage(current_trial[&quot;image3&quot;]);&amp;#10;} else {&amp;#10;    upperimage.setImage(&quot;grey.png&quot;);&amp;#10;}&amp;#10;creditfirst = Number.parseInt(current_trial[&quot;credit1&quot;]);&amp;#10;creditsecond = Number.parseInt(current_trial[&quot;credit2&quot;]);&amp;#10;creditthird = Number.parseInt(current_trial[&quot;credit3&quot;]);&amp;#10;is_three_image_trial = (_pj.in_es6(&quot;image3&quot;, current_trial) &amp;&amp; (! _pj.in_es6(current_trial[&quot;image3&quot;], [&quot;grey.png&quot;, null, &quot;&quot;])));&amp;#10;two_image_trial = (_pj.in_es6(&quot;image3&quot;, current_trial) &amp;&amp; _pj.in_es6(current_trial[&quot;image3&quot;], [&quot;grey.png&quot;, null, &quot;&quot;]));&amp;#10;console.log(`Assigned credits - First: ${creditfirst}, Second: ${creditsecond}, Third: ${creditthird}`);&amp;#10;should_swap = (Math.random() &gt; 0.5);&amp;#10;if ((two_image_trial &amp;&amp; should_swap)) {&amp;#10;    [leftimage.image, rightimage.image] = [rightimage.image, leftimage.image];&amp;#10;    [creditfirst, creditsecond] = [creditsecond, creditfirst];&amp;#10;    console.log(&quot;Randomly swapped left and right images for 2-image trial.&quot;);&amp;#10;}&amp;#10;if (is_three_image_trial) {&amp;#10;    console.log(&quot;Shuffling images for a 3-image trial.&quot;);&amp;#10;    positions = [[leftimage.image, creditfirst], [rightimage.image, creditsecond], [upperimage.image, creditthird]];&amp;#10;    util.shuffle(positions);&amp;#10;    leftimage.setImage(positions[0][0]);&amp;#10;    rightimage.setImage(positions[1][0]);&amp;#10;    upperimage.setImage(positions[2][0]);&amp;#10;    [creditfirst, creditsecond, creditthird] = [positions[0][1], positions[1][1], positions[2][1]];&amp;#10;    console.log(`Shuffled Images: Left = ${leftimage.image}, Right = ${rightimage.image}, Upper = ${upperimage.image}`);&amp;#10;}&amp;#10;if (_pj.in_es6(&quot;is_rating_trial&quot;, current_trial)) {&amp;#10;    show_rating = current_trial[&quot;is_rating_trial&quot;];&amp;#10;} else {&amp;#10;    show_rating = false;&amp;#10;}&amp;#10;console.log(`Is it a rating scale trial?: ${show_rating}`);&amp;#10;trial_start_time = globalClock.getTime();&amp;#10;psychoJS.experiment.addData(&quot;trialStart&quot;, trial_start_time);&amp;#10;stimulus_start_time = t;&amp;#10;psychoJS.experiment.addData(&quot;stimulusStart&quot;, stimulus_start_time);&amp;#10;response_made = false;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# Reset clock at the start of each trial&amp;#10;rt_clock.reset()&amp;#10;&amp;#10;# Check if trial list is valid&amp;#10;if MainExpTrials.trialList and 0 &lt;= MainExpTrials.thisN &lt; len(MainExpTrials.trialList):&amp;#10;    current_trial = MainExpTrials.trialList[MainExpTrials.thisN]&amp;#10;    print(f&quot;Current Trial Index: {MainExpTrials.thisN}&quot;)&amp;#10;else:&amp;#10;    print(&quot;Error: Trial list is empty or thisN is out of range!&quot;)&amp;#10;&amp;#10;# Assign images&amp;#10;leftimage.setImage(current_trial['image1'])&amp;#10;rightimage.setImage(current_trial['image2'])&amp;#10;if 'image3' in current_trial and current_trial['image3']:&amp;#10;    upperimage.setImage(current_trial['image3'])&amp;#10;else:&amp;#10;    upperimage.setImage(&quot;grey.png&quot;)  # 2-image trials&amp;#10;&amp;#10;# Assign credits&amp;#10;creditfirst = int(current_trial['credit1'])&amp;#10;creditsecond = int(current_trial['credit2'])&amp;#10;creditthird = int(current_trial['credit3'])&amp;#10;&amp;#10;# Detect whether it’s a 2-image or 3-image trial&amp;#10;is_three_image_trial = 'image3' in current_trial and current_trial['image3'] not in [&quot;grey.png&quot;, None, &quot;&quot;]&amp;#10;two_image_trial = 'image3' in current_trial and current_trial['image3'] in [&quot;grey.png&quot;, None, &quot;&quot;]&amp;#10;&amp;#10;print(f&quot;Assigned credits - First: {creditfirst}, Second: {creditsecond}, Third: {creditthird}&quot;)&amp;#10;&amp;#10;# Randomly swap left and right images&amp;#10;should_swap = random() &gt; 0.5&amp;#10;if two_image_trial and should_swap:&amp;#10;    leftimage.image, rightimage.image = rightimage.image, leftimage.image&amp;#10;    creditfirst, creditsecond = creditsecond, creditfirst&amp;#10;    print(&quot;Randomly swapped left and right images for 2-image trial.&quot;)&amp;#10;&amp;#10;# For 3-image trials, shuffle all 3 positions&amp;#10;if is_three_image_trial:&amp;#10;    print(&quot;Shuffling images for a 3-image trial.&quot;)&amp;#10;    &amp;#10;    positions = [&amp;#10;        (leftimage.image, creditfirst),&amp;#10;        (rightimage.image, creditsecond),&amp;#10;        (upperimage.image, creditthird)&amp;#10;    ]&amp;#10;&amp;#10;    shuffle(positions)&amp;#10;&amp;#10;    leftimage.setImage(positions[0][0])&amp;#10;    rightimage.setImage(positions[1][0])&amp;#10;    upperimage.setImage(positions[2][0])&amp;#10;&amp;#10;    creditfirst, creditsecond, creditthird = positions[0][1], positions[1][1], positions[2][1]&amp;#10;&amp;#10;    print(f&quot;Shuffled Images: Left = {leftimage.image}, Right = {rightimage.image}, Upper = {upperimage.image}&quot;)&amp;#10;&amp;#10;# Trials with the rating scale according to the condition file&amp;#10;if 'is_rating_trial' in current_trial:&amp;#10;    show_rating = current_trial['is_rating_trial']&amp;#10;else:&amp;#10;    show_rating = False &amp;#10;&amp;#10;print(f&quot;Is it a rating scale trial?: {show_rating}&quot;)&amp;#10;&amp;#10;# Logging trial start time&amp;#10;trial_start_time = globalClock.getTime()&amp;#10;thisExp.addData('trialStart', trial_start_time)&amp;#10;&amp;#10;# Logging stimulus display time&amp;#10;stimulus_start_time = t &amp;#10;thisExp.addData('stimulusStart', stimulus_start_time)  &amp;#10;&amp;#10;response_made = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="print(response_made)&amp;#10;keys = selection.keys &amp;#10;&amp;#10;if keys:&amp;#10;    response_made = True&amp;#10;    print(f&quot;Keys detected: {keys}&quot;)&amp;#10;    &amp;#10;    if 'left' in keys or 'l' in keys:&amp;#10;        chosenimage = leftimage.image&amp;#10;        chosencredit = creditfirst&amp;#10;    elif 'right' in keys or 'r' in keys:&amp;#10;        chosenimage = rightimage.image&amp;#10;        chosencredit = creditsecond&amp;#10;    elif 'up' in keys or 'u' in keys and upperimage.image:&amp;#10;        chosenimage = upperimage.image&amp;#10;        chosencredit = creditthird&amp;#10;&amp;#10;    print(f&quot;Chosen image: {chosenimage}, Credit: {int(chosencredit)}&quot;)&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;console.log(response_made);&amp;#10;keys = selection.keys;&amp;#10;if (keys) {&amp;#10;    response_made = true;&amp;#10;    console.log(`Keys detected: ${keys}`);&amp;#10;    if ((_pj.in_es6(&quot;left&quot;, keys) || _pj.in_es6(&quot;l&quot;, keys))) {&amp;#10;        chosenimage = leftimage.image;&amp;#10;        chosencredit = creditfirst;&amp;#10;    } else {&amp;#10;        if ((_pj.in_es6(&quot;right&quot;, keys) || _pj.in_es6(&quot;r&quot;, keys))) {&amp;#10;            chosenimage = rightimage.image;&amp;#10;            chosencredit = creditsecond;&amp;#10;        } else {&amp;#10;            if ((_pj.in_es6(&quot;up&quot;, keys) || (_pj.in_es6(&quot;u&quot;, keys) &amp;&amp; upperimage.image))) {&amp;#10;                chosenimage = upperimage.image;&amp;#10;                chosencredit = creditthird;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    console.log(`Chosen image: ${chosenimage}, Credit: ${Number.parseInt(chosencredit)}`);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((response_made === false)) {&amp;#10;    console.log(&quot;No response within 2.5 seconds. Auto-selection applied.&quot;);&amp;#10;    if (is_three_image_trial) {&amp;#10;        console.log(&quot;Auto-selection for a 3-image trial.&quot;);&amp;#10;        creditz = [Number.parseInt(creditfirst), Number.parseInt(creditsecond), Number.parseInt(creditthird)];&amp;#10;        images = [leftimage.image, rightimage.image, upperimage.image];&amp;#10;        console.log(`Credits on this auto-selection trial: ${creditz}`);&amp;#10;        console.log(`Images on this auto-selection trial: ${images}`);&amp;#10;        min_credit = Math.min(...creditz);&amp;#10;        min_index = util.index(creditz, min_credit);&amp;#10;        chosenimage = images[min_index];&amp;#10;        chosencredit = creditz[min_index];&amp;#10;        console.log(`Minimum credit image automatically chosen: ${chosenimage}`);&amp;#10;        console.log(`Minimum credit automatically chosen: ${chosencredit}`);&amp;#10;    } else {&amp;#10;        if (two_image_trial) {&amp;#10;            console.log(&quot;Auto-selection for a 2-image trial.&quot;);&amp;#10;            if ((creditfirst &lt; creditsecond)) {&amp;#10;                chosenimage = leftimage.image;&amp;#10;                chosencredit = Number.parseInt(creditfirst);&amp;#10;            } else {&amp;#10;                chosenimage = rightimage.image;&amp;#10;                chosencredit = Number.parseInt(creditsecond);&amp;#10;            }&amp;#10;            console.log(`Auto-selected image: ${chosenimage}, Credit: ${chosencredit}`);&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;if ((two_image_trial &amp;&amp; (chosenimage === &quot;grey.png&quot;))) {&amp;#10;    console.log(&quot;\u26a0\ufe0f WARNING: grey.png was selected \u2014 this shouldn't happen in 2-image trials!&quot;);&amp;#10;}&amp;#10;trialCount += 1;&amp;#10;if (chosencredit) {&amp;#10;    creditsEarned += Number.parseInt(chosencredit);&amp;#10;    console.log(`Total Credits Updated: ${Number.parseInt(creditsEarned)}`);&amp;#10;} else {&amp;#10;    console.log(&quot;Error: credits not updated&quot;);&amp;#10;}&amp;#10;if ((chosencredit === Math.max(function () {&amp;#10;    var _pj_a = [], _pj_b = [credit1, credit2, credit3];&amp;#10;    for (var _pj_c = 0, _pj_d = _pj_b.length; (_pj_c &lt; _pj_d); _pj_c += 1) {&amp;#10;        var credit = _pj_b[_pj_c];&amp;#10;        if ((credit !== null)) {&amp;#10;            _pj_a.push(credit);&amp;#10;        }&amp;#10;    }&amp;#10;    return _pj_a;&amp;#10;}&amp;#10;.call(this)))) {&amp;#10;    correctchoice = 1;&amp;#10;    console.log(&quot;The image with the highest credit was chosen.&quot;);&amp;#10;} else {&amp;#10;    correctchoice = 0;&amp;#10;}&amp;#10;if (response_made) {&amp;#10;    total_trials_main += 1;&amp;#10;    if ((correctchoice === 1)) {&amp;#10;        correct_trials_main += 1;&amp;#10;    }&amp;#10;} else {&amp;#10;    console.log(&quot;Auto-selected trial, not counted for accuracy.&quot;);&amp;#10;}&amp;#10;psychoJS.experiment.addData(&quot;CorrectResponseMain&quot;, correctchoice);&amp;#10;psychoJS.experiment.addData(&quot;mainleftcredit&quot;, Number.parseInt(creditfirst));&amp;#10;psychoJS.experiment.addData(&quot;mainrightcredit&quot;, Number.parseInt(creditsecond));&amp;#10;psychoJS.experiment.addData(&quot;mainthirdcredit&quot;, Number.parseInt(creditthird));&amp;#10;psychoJS.experiment.addData(&quot;mainchosenimage&quot;, chosenimage);&amp;#10;psychoJS.experiment.addData(&quot;mainchosencredit&quot;, Number.parseInt(chosencredit));&amp;#10;psychoJS.experiment.addData(&quot;mainselectedkey&quot;, selection.keys);&amp;#10;psychoJS.experiment.addData(&quot;mainreactiontime&quot;, (response_made ? selection.rt : &quot;Auto-selected&quot;));&amp;#10;psychoJS.experiment.addData(&quot;ShowRating&quot;, show_rating);&amp;#10;psychoJS.experiment.addData(&quot;autoselectedtrial&quot;, auto_selection);&amp;#10;psychoJS.experiment.addData(&quot;response_made&quot;, response_made);&amp;#10;image3_to_store = ((! is_three_image_trial) ? &quot;grey.png&quot; : upperimage.image);&amp;#10;credit3_to_store = ((! is_three_image_trial) ? 0 : creditthird);&amp;#10;if ((! response_made)) {&amp;#10;    timed_out_trials.push({&quot;image1&quot;: leftimage.image, &quot;image2&quot;: rightimage.image, &quot;image3&quot;: image3_to_store, &quot;credit1&quot;: creditfirst, &quot;credit2&quot;: creditsecond, &quot;credit3&quot;: credit3_to_store});&amp;#10;    console.log(`Auto-selected trial stored: ${timed_out_trials.slice((- 1))[0]}`);&amp;#10;}&amp;#10;psychoJS.experiment.addData(&quot;timed_out_trials&quot;, timed_out_trials);&amp;#10;console.log(`Timed-out trials: ${timed_out_trials}`);&amp;#10;psychoJS.experiment.addData(&quot;timedOutTrialsCount&quot;, timed_out_trials.length);&amp;#10;if ((MainExpTrials.thisN === (MainExpTrials.trialList.length - 1))) {&amp;#10;    console.log(&quot;MainExp completed. Ending MainExpTrials loop. Preparing for Recovery Loop.&quot;);&amp;#10;    MainExpTrials.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# If no response within 2.5s (auto-selection)&amp;#10;if response_made == False:&amp;#10;    print(&quot;No response within 2.5 seconds. Auto-selection applied.&quot;)&amp;#10;&amp;#10;    if is_three_image_trial:  # 3-image trial&amp;#10;        print(&quot;Auto-selection for a 3-image trial.&quot;)&amp;#10;        &amp;#10;        creditz = [int(creditfirst), int(creditsecond), int(creditthird)]&amp;#10;        images = [leftimage.image, rightimage.image, upperimage.image]&amp;#10;        print(f&quot;Credits on this auto-selection trial: {creditz}&quot;)&amp;#10;        print(f&quot;Images on this auto-selection trial: {images}&quot;)&amp;#10;&amp;#10;        # Find minimum credit and its index&amp;#10;        min_credit = Math.min(*creditz)&amp;#10;        min_index = creditz.index(min_credit)&amp;#10;&amp;#10;        chosenimage = images[min_index]&amp;#10;        chosencredit = creditz[min_index]&amp;#10;&amp;#10;        print(f&quot;Minimum credit image automatically chosen: {chosenimage}&quot;)&amp;#10;        print(f&quot;Minimum credit automatically chosen: {chosencredit}&quot;)&amp;#10;&amp;#10;    elif two_image_trial:  # 2-image trial&amp;#10;        print(&quot;Auto-selection for a 2-image trial.&quot;)&amp;#10;&amp;#10;        if creditfirst &lt; creditsecond:&amp;#10;            chosenimage = leftimage.image&amp;#10;            chosencredit = int(creditfirst)&amp;#10;        else:&amp;#10;            chosenimage = rightimage.image&amp;#10;            chosencredit = int(creditsecond)&amp;#10;&amp;#10;        print(f&quot;Auto-selected image: {chosenimage}, Credit: {chosencredit}&quot;)&amp;#10;        &amp;#10;if two_image_trial and chosenimage == &quot;grey.png&quot;:&amp;#10;    print(&quot;⚠️ WARNING: grey.png was selected — this shouldn't happen in 2-image trials!&quot;)&amp;#10;&amp;#10;trialCount += 1&amp;#10;&amp;#10;# Update total credits (not including the training)&amp;#10;if chosencredit:&amp;#10;    creditsEarned += int(chosencredit)&amp;#10;    print(f&quot;Total Credits Updated: {int(creditsEarned)}&quot;)&amp;#10;else:&amp;#10;    print(&quot;Error: credits not updated&quot;)&amp;#10;&amp;#10;# Determine correct response based on highest credit&amp;#10;if chosencredit == max([credit for credit in [credit1, credit2, credit3] if credit is not None]):&amp;#10;    correctchoice = 1  &amp;#10;    print(&quot;The image with the highest credit was chosen.&quot;)&amp;#10;else:&amp;#10;    correctchoice = 0  &amp;#10;    &amp;#10;# --- Update accuracy tracking ---&amp;#10;if response_made:  # Only count manual responses (not auto-selections)&amp;#10;    total_trials_main += 1&amp;#10;    if correctchoice == 1:&amp;#10;        correct_trials_main += 1&amp;#10;else:&amp;#10;    print(&quot;Auto-selected trial, not counted for accuracy.&quot;)&amp;#10; &amp;#10;# Log correct/incorrect responses&amp;#10;thisExp.addData('CorrectResponseMain', correctchoice)&amp;#10;&amp;#10;# Log trial data&amp;#10;thisExp.addData('mainleftcredit', int(creditfirst))&amp;#10;thisExp.addData('mainrightcredit', int(creditsecond))&amp;#10;thisExp.addData('mainthirdcredit', int(creditthird))&amp;#10;&amp;#10;thisExp.addData('mainchosenimage', chosenimage)&amp;#10;thisExp.addData('mainchosencredit', int(chosencredit))&amp;#10;&amp;#10;thisExp.addData('mainselectedkey', selection.keys)&amp;#10;thisExp.addData('mainreactiontime', selection.rt if response_made else &quot;Auto-selected&quot;)&amp;#10;&amp;#10;thisExp.addData('ShowRating', show_rating)&amp;#10;&amp;#10;thisExp.addData('autoselectedtrial', auto_selection)&amp;#10;thisExp.addData('response_made', response_made) # Transfer response_made status to mainexpfeedback routine?&gt;&amp;#10;&amp;#10;# Add chosen image to the set of unique stimuli&amp;#10;#if chosenimage not in unique_stimuli:&amp;#10;    #unique_stimuli.add(chosenimage)&amp;#10;    #print(f&quot;New unique stimulus chosen: {chosenimage}&quot;)&amp;#10;&amp;#10;#thisExp.addData('UniqueStimuliCount', len(unique_stimuli))&amp;#10;&amp;#10;# Determine if it's a 2-image trial (store grey.png explicitly)&amp;#10;image3_to_store = &quot;grey.png&quot; if not is_three_image_trial else upperimage.image&amp;#10;credit3_to_store = 0 if not is_three_image_trial else creditthird&amp;#10;&amp;#10;# Logging auto-selected trials for reuse in the recovery routine&amp;#10;if not response_made:&amp;#10;    timed_out_trials.append({&amp;#10;        'image1':leftimage.image,&amp;#10;        'image2': rightimage.image,&amp;#10;        'image3': image3_to_store,&amp;#10;        'credit1': creditfirst,&amp;#10;        'credit2': creditsecond,&amp;#10;        'credit3': credit3_to_store,&amp;#10;    })&amp;#10;    print(f&quot;Auto-selected trial stored: {timed_out_trials[-1]}&quot;)&amp;#10;    &amp;#10;thisExp.addData('timed_out_trials', timed_out_trials)&amp;#10;print(f&quot;Timed-out trials: {timed_out_trials}&quot;)&amp;#10;thisExp.addData('timedOutTrialsCount', len(timed_out_trials))&amp;#10;&amp;#10;# Transition to the Recovery Loop (only if there are timed-out trials)&amp;#10;# Final trial check&amp;#10;if MainExpTrials.thisN == len(MainExpTrials.trialList) - 1:&amp;#10;    print(&quot;MainExp completed. Ending MainExpTrials loop. Preparing for Recovery Loop.&quot;)&amp;#10;    # Ensuring all timed-out trials are prepared for the recovery routine&amp;#10;    MainExpTrials.finished = True  # End the loop&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_8" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="MainExpFeedback">
      <RoutineSettingsComponent name="MainExpFeedback" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="MainExpFeedback" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="decisionImage" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$chosenimage" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="decisionImage" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="text_15" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_15" valType="code" updates="None" name="name"/>
        <Param val="1" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.37)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$text_15.text&amp;#10;" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="creditCounter" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="creditCounter" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.65, 0.42)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;Total Credits: &quot; + str(creditsEarned)" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="code_9" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if (response_made) {&amp;#10;    text_15.text = `+ ${Number.parseInt(chosencredit)} credits`;&amp;#10;    console.log(`Participant feedback: ${chosenimage} with ${Number.parseInt(chosencredit)} credits.`);&amp;#10;} else {&amp;#10;    text_15.text = `No option chosen within 2.5 seconds.&amp;#10;Lowest reward (+ ${Number.parseInt(chosencredit)} credits) automatically selected.`&amp;#10;;&amp;#10;    console.log(`Auto-selection feedback: ${chosenimage} with ${Number.parseInt(chosencredit)} credits.`);&amp;#10;}&amp;#10;creditCounter.text = `Total Credits: ${Number.parseInt(creditsEarned)}`;&amp;#10;console.log(`Credits Updated: ${Number.parseInt(creditsEarned)}`);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if response_made: # Participant made a response in time&amp;#10;    text_15.text = f&quot;+ {int(chosencredit)} credits&quot;&amp;#10;    print(f&quot;Participant feedback: {chosenimage} with {int(chosencredit)} credits.&quot;)&amp;#10;else:&amp;#10;    text_15.text = f&quot;No option chosen within 2.5 seconds. \nLowest reward (+ {int(chosencredit)} credits) automatically selected.&quot;&amp;#10;    print(f&quot;Auto-selection feedback: {chosenimage} with {int(chosencredit)} credits.&quot;)&amp;#10;&amp;#10;# Update the  total credits counter&amp;#10;creditCounter.text = f&quot;Total Credits: {int(creditsEarned)}&quot;&amp;#10;print(f&quot;Credits Updated: {int(creditsEarned)}&quot;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="### Ensure feedback image is set properly&amp;#10;#if chosenimage:&amp;#10;    #decisionImage.setImage(chosenimage)&amp;#10;#else:&amp;#10;    #decisionImage.setImage(None)&amp;#10;    #print(&quot;⚠️ No valid image chosen. Feedback image cleared.&quot;)&amp;#10;&amp;#10;# Resetting variables for the next trial &amp;#10;# (should this be here??? why not in the begin routine of mainexp???)&amp;#10;#chosenimage = None&amp;#10;#chosencredit = 0&amp;#10;#response_made = False&amp;#10;#auto_selection = False&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_9" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Rating">
      <RoutineSettingsComponent name="Rating" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Rating" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_33" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="ratingTrialCounter = 0&amp;#10;slider_initialized = False" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="ratingTrialCounter = 0;&amp;#10;slider_initialized = false;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((! show_rating)) {&amp;#10;    console.log(&quot;Skipping Rating Routine for this trial.&quot;);&amp;#10;    continueRoutine = false;&amp;#10;} else {&amp;#10;    console.log(&quot;Showing Rating Routine for this trial.&quot;);&amp;#10;    slider_initialized = false;&amp;#10;}&amp;#10;if (show_rating) {&amp;#10;    ratingTrialCounter += 1;&amp;#10;    console.log(`Rating Scale trial: ${ratingTrialCounter}`);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# Check if it is a rating trial&amp;#10;if not show_rating:&amp;#10;    print(&quot;Skipping Rating Routine for this trial.&quot;)&amp;#10;    continueRoutine = False&amp;#10;else:&amp;#10;    print(&quot;Showing Rating Routine for this trial.&quot;)&amp;#10;    &amp;#10;    slider_initialized = False  # Will trigger setup in Each Frame?&amp;#10;    &amp;#10;if show_rating:&amp;#10;    ratingTrialCounter += 1&amp;#10;    print(f&quot;Rating Scale trial: {ratingTrialCounter}&quot;)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_33" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="text_13" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_13" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.1)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Please rate THE DIFFICULTY OF THE LAST TRIAL by clicking on the scale below USING YOUR MOUSE.&amp;#10;&amp;#10;After you select a rating between 0-10, press SPACE to confirm." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_17" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_17" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <SliderComponent name="difficultySlider" plugin="None">
        <Param val="White" valType="color" updates="constant" name="borderColor"/>
        <Param val="LightGray" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Red" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="1" valType="num" updates="constant" name="granularity"/>
        <Param val="" valType="code" updates="None" name="initVal"/>
        <Param val="['Very\neasy', 'Very\ndifficult'] " valType="list" updates="constant" name="labels"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="difficultySlider" valType="code" updates="None" name="name"/>
        <Param val="1" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1, 0.1)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="True" valType="bool" updates="constant" name="storeRating"/>
        <Param val="True" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="('triangleMarker',)" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10)" valType="list" updates="constant" name="ticks"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </SliderComponent>
      <CodeComponent name="code_12" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="# Initialize slider only once&amp;#10;if not slider_initialized:&amp;#10;    difficultySlider.reset()&amp;#10;    difficultySlider.markerPos = 5&amp;#10;    slider_initialized = True&amp;#10;    print(f&quot;Slider starts at: {difficultySlider.markerPos}&quot;)&amp;#10;&amp;#10;# If a rating is made and space is pressed, end the routine&amp;#10;if difficultySlider.getRating() is not None and 'space' in event.getKeys():&amp;#10;    continueRoutine = False&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if ((! slider_initialized)) {&amp;#10;    difficultySlider.reset();&amp;#10;    difficultySlider.markerPos = 5;&amp;#10;    slider_initialized = true;&amp;#10;    console.log(`Slider starts at: ${difficultySlider.markerPos}`);&amp;#10;}&amp;#10;if (((difficultySlider.getRating() !== null) &amp;&amp; _pj.in_es6(&quot;space&quot;, psychoJS.eventManager.getKeys()))) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="rating = difficultySlider.getRating();&amp;#10;console.log(`Rating made for this trial: ${rating}`);&amp;#10;if ((rating !== null)) {&amp;#10;    psychoJS.experiment.addData(&quot;Rating&quot;, Number.parseInt(rating));&amp;#10;    psychoJS.experiment.addData(&quot;TrialIndex&quot;, MainExpTrials.thisN);&amp;#10;} else {&amp;#10;    psychoJS.experiment.addData(&quot;Rating&quot;, &quot;NA&quot;);&amp;#10;    psychoJS.experiment.addData(&quot;TrialIndex&quot;, MainExpTrials.thisN);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="rating = difficultySlider.getRating()&amp;#10;print(f&quot;Rating made for this trial: {rating}&quot;)&amp;#10;&amp;#10;if rating is not None:&amp;#10;    thisExp.addData('Rating', int(rating))&amp;#10;    thisExp.addData('TrialIndex', MainExpTrials.thisN)&amp;#10;else:&amp;#10;    thisExp.addData('Rating', 'NA')&amp;#10;    thisExp.addData('TrialIndex', MainExpTrials.thisN)&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_12" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Recovery">
      <RoutineSettingsComponent name="Recovery" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Recovery" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_7" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if (timed_out_trials) {&amp;#10;    console.log(` Started: Timed out trials for the Recovery Loop: ${timed_out_trials}`);&amp;#10;    if ((RecoveryLoop.thisN &lt; n_recovery_trials)) {&amp;#10;        current_recovery_trial = timed_out_trials[RecoveryLoop.thisN];&amp;#10;        console.log(`Processing Recovery Trial: ${current_recovery_trial}`);&amp;#10;    } else {&amp;#10;        console.log(&quot;RecoveryLoop.thisN is out of bounds.&quot;);&amp;#10;        continueRoutine = false;&amp;#10;        RecoveryLoop.finished = true;&amp;#10;    }&amp;#10;} else {&amp;#10;    console.log(&quot;No timed-out trials. Ending Recovery Loop.&quot;);&amp;#10;    RecoveryLoop.finished = true;&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="if timed_out_trials: &amp;#10;    print(f&quot; Started: Timed out trials for the Recovery Loop: {timed_out_trials}&quot;)&amp;#10;    &amp;#10;    # Make sure index is safe&amp;#10;    if RecoveryLoop.thisN &lt; n_recovery_trials:&amp;#10;        current_recovery_trial = timed_out_trials[RecoveryLoop.thisN]&amp;#10;        print(f&quot;Processing Recovery Trial: {current_recovery_trial}&quot;)&amp;#10;    else:&amp;#10;        print(&quot;RecoveryLoop.thisN is out of bounds.&quot;)&amp;#10;        continueRoutine = False&amp;#10;        RecoveryLoop.finished = True&amp;#10;else:&amp;#10;    print(&quot;No timed-out trials. Ending Recovery Loop.&quot;)&amp;#10;    RecoveryLoop.finished = True&amp;#10;    continueRoutine = False&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_7" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="imageleft" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$image1" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="imageleft" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.3, -0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="imageright" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$image2" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="imageright" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.3, -0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <ImageComponent name="imageup" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$image3" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="imageup" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.25)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.3, 0.3)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <KeyboardComponent name="key_resp_19" plugin="None">
        <Param val="['left', 'right', 'l', 'r', 'up']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_19" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <TextComponent name="creditCounterRecovery" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="creditCounterRecovery" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.65, 0.42)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.5" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;Total Credits: &quot; + str(creditsEarned)" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="code_13" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="# Initialize variables&amp;#10;response_made_recovery = False&amp;#10;chosenimagerecovery = None&amp;#10;chosencreditrecovery = 0&amp;#10;&amp;#10;key_resp_19.keys = []&amp;#10;key_resp_19.rt = None&amp;#10;&amp;#10;rt_clock_recovery = core.Clock()&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="response_made_recovery = false;&amp;#10;chosenimagerecovery = null;&amp;#10;chosencreditrecovery = 0;&amp;#10;key_resp_19.keys = [];&amp;#10;key_resp_19.rt = null;&amp;#10;rt_clock_recovery = new util.Clock();&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="rt_clock_recovery.reset();&amp;#10;response_made_recovery = false;&amp;#10;current_recovery_trial = timed_out_trials[RecoveryLoop.thisN];&amp;#10;imageleft.setImage(current_recovery_trial[&quot;image1&quot;]);&amp;#10;imageright.setImage(current_recovery_trial[&quot;image2&quot;]);&amp;#10;imageup.setImage(current_recovery_trial[&quot;image3&quot;]);&amp;#10;credit1recovery = Number.parseInt(Number.parseFloat(current_recovery_trial[&quot;credit1&quot;]));&amp;#10;credit2recovery = Number.parseInt(Number.parseFloat(current_recovery_trial[&quot;credit2&quot;]));&amp;#10;credit3recovery = Number.parseInt(Number.parseFloat(current_recovery_trial[&quot;credit3&quot;]));&amp;#10;is_three_image_trial_recovery = (current_recovery_trial[&quot;image3&quot;] !== &quot;grey.png&quot;);&amp;#10;is_two_image_trial_recovery = (current_recovery_trial[&quot;image3&quot;] === &quot;grey.png&quot;);&amp;#10;console.log(&quot;image3:&quot;, current_recovery_trial[&quot;image3&quot;]);&amp;#10;console.log(&quot;Interpreted as 3-image trial?&quot;, is_three_image_trial_recovery);&amp;#10;console.log(`Left Image: ${imageleft.image} (Credits: ${credit1recovery})`);&amp;#10;console.log(`Right Image: ${imageright.image} (Credits: ${credit2recovery})`);&amp;#10;console.log(`Upper Image: ${imageup.image} (Credits: ${credit3recovery})`);&amp;#10;response_made_recovery = false;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# Reset RT clock&amp;#10;rt_clock_recovery.reset()&amp;#10;response_made_recovery = False&amp;#10;&amp;#10;current_recovery_trial = timed_out_trials[RecoveryLoop.thisN]&amp;#10;&amp;#10;# Assign images from the condition file&amp;#10;imageleft.setImage(current_recovery_trial['image1'])&amp;#10;imageright.setImage(current_recovery_trial['image2'])&amp;#10;imageup.setImage(current_recovery_trial['image3'])&amp;#10;&amp;#10;# Assign credits  (avoiding non-numeric values)&amp;#10;credit1recovery = int(float(current_recovery_trial['credit1']))&amp;#10;credit2recovery = int(float(current_recovery_trial['credit2']))&amp;#10;credit3recovery = int(float(current_recovery_trial['credit3']))&amp;#10;&amp;#10;is_three_image_trial_recovery = current_recovery_trial['image3'] != &quot;grey.png&quot;&amp;#10;is_two_image_trial_recovery = current_recovery_trial['image3'] == &quot;grey.png&quot;&amp;#10;&amp;#10;print(&quot;image3:&quot;, current_recovery_trial['image3'])&amp;#10;print(&quot;Interpreted as 3-image trial?&quot;, is_three_image_trial_recovery)&amp;#10;&amp;#10;print(f&quot;Left Image: {imageleft.image} (Credits: {credit1recovery})&quot;)&amp;#10;print(f&quot;Right Image: {imageright.image} (Credits: {credit2recovery})&quot;)&amp;#10;print(f&quot;Upper Image: {imageup.image} (Credits: {credit3recovery})&quot;)&amp;#10;&amp;#10;response_made_recovery = False" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="keys_recovery = key_resp_19.keys&amp;#10;print(f&quot;Keys detected: {keys_recovery}&quot;)&amp;#10;&amp;#10;if keys_recovery:&amp;#10;    response_made_recovery = True&amp;#10;    if 'left' in keys_recovery or 'l' in keys_recovery:&amp;#10;        chosenimagerecovery = imageleft.image&amp;#10;        chosencreditrecovery = credit1recovery&amp;#10;    elif 'right' in keys_recovery or 'r' in keys_recovery:&amp;#10;        chosenimagerecovery = imageright.image&amp;#10;        chosencreditrecovery = credit2recovery&amp;#10;    elif 'up' in keys_recovery or 'u' in keys_recovery and imageup.image:&amp;#10;        chosenimagerecovery = imageup.image&amp;#10;        chosencreditrecovery = credit3recovery&amp;#10;&amp;#10;    print(f&quot;Chosen Recovery Image: {chosenimagerecovery}, Credit: {int(chosencreditrecovery)}&quot;)&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;keys_recovery = key_resp_19.keys;&amp;#10;console.log(`Keys detected: ${keys_recovery}`);&amp;#10;if (keys_recovery) {&amp;#10;    response_made_recovery = true;&amp;#10;    if ((_pj.in_es6(&quot;left&quot;, keys_recovery) || _pj.in_es6(&quot;l&quot;, keys_recovery))) {&amp;#10;        chosenimagerecovery = imageleft.image;&amp;#10;        chosencreditrecovery = credit1recovery;&amp;#10;    } else {&amp;#10;        if ((_pj.in_es6(&quot;right&quot;, keys_recovery) || _pj.in_es6(&quot;r&quot;, keys_recovery))) {&amp;#10;            chosenimagerecovery = imageright.image;&amp;#10;            chosencreditrecovery = credit2recovery;&amp;#10;        } else {&amp;#10;            if ((_pj.in_es6(&quot;up&quot;, keys_recovery) || (_pj.in_es6(&quot;u&quot;, keys_recovery) &amp;&amp; imageup.image))) {&amp;#10;                chosenimagerecovery = imageup.image;&amp;#10;                chosencreditrecovery = credit3recovery;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    console.log(`Chosen Recovery Image: ${chosenimagerecovery}, Credit: ${Number.parseInt(chosencreditrecovery)}`);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="var _pj;&amp;#10;function _pj_snippets(container) {&amp;#10;    function in_es6(left, right) {&amp;#10;        if (((right instanceof Array) || ((typeof right) === &quot;string&quot;))) {&amp;#10;            return (right.indexOf(left) &gt; (- 1));&amp;#10;        } else {&amp;#10;            if (((right instanceof Map) || (right instanceof Set) || (right instanceof WeakMap) || (right instanceof WeakSet))) {&amp;#10;                return right.has(left);&amp;#10;            } else {&amp;#10;                return (left in right);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    container[&quot;in_es6&quot;] = in_es6;&amp;#10;    return container;&amp;#10;}&amp;#10;_pj = {};&amp;#10;_pj_snippets(_pj);&amp;#10;if ((response_made_recovery === false)) {&amp;#10;    console.log(`No response within 2.5 seconds. Auto-selection applied.`);&amp;#10;    if (is_three_image_trial_recovery) {&amp;#10;        console.log(&quot;Auto-selection for a 3-image recovery trial.&quot;);&amp;#10;        creditz_recovery = [Number.parseInt(credit1recovery), Number.parseInt(credit2recovery), Number.parseInt(credit3recovery)];&amp;#10;        console.log(`Credits on this auto-selection recovery trial: ${Number.parseInt(creditz_recovery)}`);&amp;#10;        images_recovery = [imageleft.image, imageright.image, imageup.image];&amp;#10;        console.log(`Images on this recovery auto-selection trial: ${images_recovery}`);&amp;#10;        min_credit_recovery = Math.min(...creditz_recovery);&amp;#10;        console.log(`Minimum credit on the recovery trial: ${Number.parseInt(min_credit_recovery)}`);&amp;#10;        min_index_recovery = util.index(creditz_recovery, min_credit_recovery);&amp;#10;        console.log(`Index of minimum credit: ${Number.parseInt(min_index_recovery)}`);&amp;#10;        chosenimagerecovery = images_recovery[min_index_recovery];&amp;#10;        console.log(`Minimum credit image automatically chosen: ${chosenimagerecovery}`);&amp;#10;        chosencreditrecovery = creditz_recovery[min_index_recovery];&amp;#10;        console.log(`Minimum credit automatically chosen: ${Number.parseInt(chosencreditrecovery)}`);&amp;#10;    } else {&amp;#10;        if (is_two_image_trial_recovery) {&amp;#10;            console.log(&quot;Auto-selection for a 2-image recovery trial.&quot;);&amp;#10;            if ((credit1recovery &lt; credit2recovery)) {&amp;#10;                chosenimagerecovery = imageleft.image;&amp;#10;                chosencreditrecovery = credit1recovery;&amp;#10;            } else {&amp;#10;                chosenimagerecovery = imageright.image;&amp;#10;                chosencreditrecovery = credit2recovery;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;    console.log(`Auto-selected image: ${chosenimagerecovery}, Credit: ${Number.parseInt(chosencreditrecovery)}`);&amp;#10;}&amp;#10;if ((is_two_image_trial_recovery &amp;&amp; _pj.in_es6(&quot;grey.png&quot;, chosenimagerecovery.toString()))) {&amp;#10;    console.log(&quot;\u26a0\ufe0f WARNING: grey.png was selected \u2014 this shouldn't happen in 2-image trials!&quot;);&amp;#10;}&amp;#10;if (chosencreditrecovery) {&amp;#10;    creditsEarned += Number.parseInt(chosencreditrecovery);&amp;#10;    console.log(`Total Credits Updated: ${Number.parseInt(creditsEarned)}`);&amp;#10;} else {&amp;#10;    console.log(&quot;Error: credits not updated&quot;);&amp;#10;}&amp;#10;creditCounterRecovery.text = `Total Credits: ${Number.parseInt(creditsEarned)}`;&amp;#10;console.log(`Credits updated after recovery trial: ${Number.parseInt(creditsEarned)}`);&amp;#10;psychoJS.experiment.addData(&quot;recoveryelectedkey&quot;, key_resp_19.keys);&amp;#10;psychoJS.experiment.addData(&quot;recoveryreactiontime&quot;, (response_made ? key_resp_19.rt : &quot;Auto-selected&quot;));&amp;#10;if ((chosenimagerecovery !== null)) {&amp;#10;    psychoJS.experiment.addData(&quot;ChosenImageRecovery&quot;, chosenimagerecovery.toString());&amp;#10;    psychoJS.experiment.addData(&quot;credit1recovery&quot;, Number.parseInt(credit1recovery));&amp;#10;    psychoJS.experiment.addData(&quot;credit2recovery&quot;, Number.parseInt(credit2recovery));&amp;#10;    psychoJS.experiment.addData(&quot;credit3recovery&quot;, Number.parseInt(credit3recovery));&amp;#10;    psychoJS.experiment.addData(&quot;ChosenCreditRecovery&quot;, Number.parseInt(chosencreditrecovery));&amp;#10;} else {&amp;#10;    psychoJS.experiment.addData(&quot;SelectedImageRecovery&quot;, &quot;No image selected&quot;);&amp;#10;}&amp;#10;psychoJS.experiment.addData(&quot;Recovery_Image1&quot;, current_recovery_trial[&quot;image1&quot;]);&amp;#10;psychoJS.experiment.addData(&quot;Recovery_Image2&quot;, current_recovery_trial[&quot;image2&quot;]);&amp;#10;psychoJS.experiment.addData(&quot;Recovery_Image3&quot;, current_recovery_trial[&quot;image3&quot;]);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# If no response within 2.5s (auto-selection)&amp;#10;if response_made_recovery == False:&amp;#10;    print(f&quot;No response within 2.5 seconds. Auto-selection applied.&quot;)&amp;#10;    &amp;#10;    if is_three_image_trial_recovery: # 3 image trial&amp;#10;        print(&quot;Auto-selection for a 3-image recovery trial.&quot;)&amp;#10;        ###&amp;#10;        creditz_recovery = [int(credit1recovery), int(credit2recovery), int(credit3recovery)]        &amp;#10;        print(f&quot;Credits on this auto-selection recovery trial: {int(creditz_recovery)}&quot;)&amp;#10;        &amp;#10;        images_recovery = [imageleft.image, imageright.image, imageup.image]&amp;#10;        print(f&quot;Images on this recovery auto-selection trial: {images_recovery}&quot;)&amp;#10;        &amp;#10;        # Find the minimum credit and its index &amp;#10;        # (apparently this is compatible with PsychoJS)&amp;#10;        min_credit_recovery = Math.min(*creditz_recovery)&amp;#10;        print(f&quot;Minimum credit on the recovery trial: {int(min_credit_recovery)}&quot;)&amp;#10;        min_index_recovery = creditz_recovery.index(min_credit_recovery)&amp;#10;        print(f&quot;Index of minimum credit: {int(min_index_recovery)}&quot;)&amp;#10;        &amp;#10;        chosenimagerecovery = images_recovery[min_index_recovery]&amp;#10;        print(f&quot;Minimum credit image automatically chosen: {chosenimagerecovery}&quot;)&amp;#10;        chosencreditrecovery = creditz_recovery[min_index_recovery]&amp;#10;        print(f&quot;Minimum credit automatically chosen: {int(chosencreditrecovery)}&quot;)&amp;#10;        &amp;#10;    elif is_two_image_trial_recovery:  # 2-image trial&amp;#10;        print(&quot;Auto-selection for a 2-image recovery trial.&quot;)&amp;#10;        &amp;#10;        if credit1recovery &lt; credit2recovery:&amp;#10;            chosenimagerecovery = imageleft.image&amp;#10;            chosencreditrecovery = credit1recovery&amp;#10;        else:&amp;#10;            chosenimagerecovery = imageright.image&amp;#10;            chosencreditrecovery = credit2recovery&amp;#10;&amp;#10;    print(f&quot;Auto-selected image: {chosenimagerecovery}, Credit: {int(chosencreditrecovery)}&quot;)&amp;#10;&amp;#10;if is_two_image_trial_recovery and &quot;grey.png&quot; in str(chosenimagerecovery):&amp;#10;    print(&quot;⚠️ WARNING: grey.png was selected — this shouldn't happen in 2-image trials!&quot;)&amp;#10;&amp;#10;######&amp;#10;if chosencreditrecovery:&amp;#10;    creditsEarned += int(chosencreditrecovery)&amp;#10;    print(f&quot;Total Credits Updated: {int(creditsEarned)}&quot;)&amp;#10;else:&amp;#10;    print(&quot;Error: credits not updated&quot;)&amp;#10;&amp;#10;# Update credits counter&amp;#10;creditCounterRecovery.text = f&quot;Total Credits: {int(creditsEarned)}&quot;&amp;#10;print(f&quot;Credits updated after recovery trial: {int(creditsEarned)}&quot;)&amp;#10;&amp;#10;thisExp.addData('recoveryelectedkey', key_resp_19.keys)&amp;#10;thisExp.addData('recoveryreactiontime', key_resp_19.rt if response_made else &quot;Auto-selected&quot;)&amp;#10;&amp;#10;if chosenimagerecovery is not None:&amp;#10;    thisExp.addData('ChosenImageRecovery', str(chosenimagerecovery))&amp;#10;    # Log trial data&amp;#10;    thisExp.addData('credit1recovery', int(credit1recovery))&amp;#10;    thisExp.addData('credit2recovery', int(credit2recovery))&amp;#10;    thisExp.addData('credit3recovery', int(credit3recovery))&amp;#10;    thisExp.addData('ChosenCreditRecovery', int(chosencreditrecovery))&amp;#10;else:&amp;#10;    thisExp.addData('SelectedImageRecovery', 'No image selected')&amp;#10;&amp;#10;# Log recovery trial data&amp;#10;thisExp.addData('Recovery_Image1', current_recovery_trial['image1'])&amp;#10;thisExp.addData('Recovery_Image2', current_recovery_trial['image2'])&amp;#10;thisExp.addData('Recovery_Image3', current_recovery_trial['image3'])&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_13" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="RecoveryFeedback">
      <RoutineSettingsComponent name="RecoveryFeedback" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="RecoveryFeedback" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="chosenImage" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$chosenimagerecovery" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="chosenImage" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.4, 0.4)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="text_16" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_16" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.37)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$text_16.text" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="creditCounter_2" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="creditCounter_2" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.65, 0.42)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="2.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;Total Credits: &quot; + str(creditsEarned)" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="code_15" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="if ((! response_made_recovery)) {&amp;#10;    text_16.text = `No option chosen. Lowest reward (+ ${Number.parseInt(chosencreditrecovery)} credits) automatically selected.`;&amp;#10;    console.log(`Auto-selection feedback: ${chosenimagerecovery} with ${Number.parseInt(chosencreditrecovery)} credits.`);&amp;#10;} else {&amp;#10;    text_16.text = `+ ${Number.parseInt(chosencreditrecovery)} credits`;&amp;#10;    console.log(`Participant recovery trial feedback: ${chosenimagerecovery} with ${Number.parseInt(chosencreditrecovery)} credits.`);&amp;#10;}&amp;#10;console.log(`Credits Updated after recovery trial: ${Number.parseInt(creditsEarned)}`);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# chosenImage.setImage(None)  # Reset feedback image&amp;#10;# Auto-selection or participant-made response&amp;#10;if not response_made_recovery:  # Auto-selection case&amp;#10;    text_16.text = f&quot;No option chosen. Lowest reward (+ {int(chosencreditrecovery)} credits) automatically selected.&quot;&amp;#10;    print(f&quot;Auto-selection feedback: {chosenimagerecovery} with {int(chosencreditrecovery)} credits.&quot;)&amp;#10;else:  # Participant made a response&amp;#10;    text_16.text = f&quot;+ {int(chosencreditrecovery)} credits&quot;&amp;#10;    print(f&quot;Participant recovery trial feedback: {chosenimagerecovery} with {int(chosencreditrecovery)} credits.&quot;)&amp;#10;&amp;#10;print(f&quot;Credits Updated after recovery trial: {int(creditsEarned)}&quot;)&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_15" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="TotalCredits">
      <RoutineSettingsComponent name="TotalCredits" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="TotalCredits" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="totaltrainingmaincredits" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="totaltrainingmaincredits" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_18" plugin="None">
        <Param val="['space']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_18" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_17" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="bonus = 0&amp;#10;totaltrainingmaincredits.text = &quot;&quot;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="bonus = 0;&amp;#10;totaltrainingmaincredits.text = &quot;&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="totalCredits = (creditsEarnedTraining + creditsEarned);&amp;#10;console.log(`Total Credits: ${Number.parseInt(totalCredits)}`);&amp;#10;totaltrainingmaincredits.text = ((`Experiment has now finished. You won ` + totalCredits.toString()) + &quot; credits in the experiment. Press SPACE to continue.&quot;);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# Sum up credits from training and main experiment&amp;#10;totalCredits = creditsEarnedTraining + creditsEarned&amp;#10;print(f&quot;Total Credits: {int(totalCredits)}&quot;)&amp;#10;&amp;#10;&amp;#10;totaltrainingmaincredits.text = f&quot;Experiment has now finished. You won &quot; + str(totalCredits) + &quot; credits in the experiment. Press SPACE to continue.&quot;&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="main_experiment_accuracy = (correct_trials_main / total_trials_main);&amp;#10;psychoJS.experiment.addData(&quot;MainExperimentAccuracy&quot;, main_experiment_accuracy);&amp;#10;console.log(`Main Experiment completed. Accuracy: ${util.pad(Number.parseFloat((main_experiment_accuracy * 100)).toFixed(2), 1)}% (${correct_trials_main}/${total_trials_main} correct)`);&amp;#10;psychoJS.experiment.addData(&quot;FinalCredits&quot;, Number.parseInt(totalCredits));&amp;#10;if ((totalCredits &gt;= 1000)) {&amp;#10;    bonus = 4;&amp;#10;} else {&amp;#10;    if (((950 &lt;= totalCredits) &amp;&amp; (totalCredits &lt; 1000))) {&amp;#10;        bonus = 3;&amp;#10;    } else {&amp;#10;        if (((900 &lt;= totalCredits) &amp;&amp; (totalCredits &lt; 950))) {&amp;#10;            bonus = 2;&amp;#10;        } else {&amp;#10;            if (((800 &lt;= totalCredits) &amp;&amp; (totalCredits &lt; 900))) {&amp;#10;                bonus = 1;&amp;#10;            } else {&amp;#10;                bonus = 0;&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;psychoJS.experiment.addData(&quot;BonusPayment&quot;, bonus);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="# Store Main Experiment Accuracy&amp;#10;main_experiment_accuracy = correct_trials_main / total_trials_main&amp;#10;thisExp.addData('MainExperimentAccuracy', main_experiment_accuracy)&amp;#10;print(f&quot;Main Experiment completed. Accuracy: {main_experiment_accuracy*100:.2f}% ({correct_trials_main}/{total_trials_main} correct)&quot;)&amp;#10;&amp;#10;thisExp.addData('FinalCredits', int(totalCredits))&amp;#10;&amp;#10;# Calculate bonus amount based on total credits&amp;#10;if totalCredits &gt;= 1000:&amp;#10;    bonus = 4&amp;#10;elif 950 &lt;= totalCredits &lt; 1000:&amp;#10;    bonus = 3&amp;#10;elif 900 &lt;= totalCredits &lt; 950:&amp;#10;    bonus = 2&amp;#10;elif 800 &lt;= totalCredits &lt; 900:&amp;#10;    bonus = 1&amp;#10;else:&amp;#10;    bonus = 0&amp;#10;&amp;#10;# Store it in the data file&amp;#10;thisExp.addData(&quot;BonusPayment&quot;, bonus)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_17" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="END">
      <RoutineSettingsComponent name="END" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="END" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
    </Routine>
    <Routine name="LeftRTInstructions">
      <RoutineSettingsComponent name="LeftRTInstructions" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="LeftRTInstructions" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_25" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_25" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Please press the LEFT arrow key (←) when you see the RED BOX.&amp;#10;&amp;#10;Press SPACE to continue." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_32" plugin="None">
        <Param val="['space']" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_32" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="MainInstructions2">
      <RoutineSettingsComponent name="MainInstructions2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="MainInstructions2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <ImageComponent name="image" plugin="None">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="RatingScale.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="image" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.7, 0.4)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
      </ImageComponent>
      <TextComponent name="text_7" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_7" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.25)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="During the experiment you will also be asked to rate the difficulty of certain choices. &amp;#10;&amp;#10;Use the LEFT (←) and RIGHT (→) arrow keys to choose a value on the rating scale and press SPACE to confirm.&amp;#10;&amp;#10;Press SPACE to confirm. " valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_13" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_13" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="TimedOutTrials">
      <RoutineSettingsComponent name="TimedOutTrials" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="TimedOutTrials" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_5" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="n_recovery_trials = timed_out_trials.length;&amp;#10;console.log(`Number of recovery trials: ${n_recovery_trials}`);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# Define number of recovery trials&amp;#10;n_recovery_trials = len(timed_out_trials)&amp;#10;print(f&quot;Number of recovery trials: {n_recovery_trials}&quot;)&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_5" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Introduction2">
      <RoutineSettingsComponent name="Introduction2" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Introduction2" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_8" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_8" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="&lt;b&gt;Are there any benefits in taking part?&lt;/b&gt;&amp;#10;There will be no direct benefit to you; however, your participation may help us better understand the mechanisms underlying responses to reward in health and disease. &amp;#10;You will receive financial compensation for participating in the study. You will receive £6 for finishing the task and filling out the questionnaires. And you could receive a further £4 depending on your performance (most people obtain more than half of the bonus).&amp;#10;&amp;#10;&lt;b&gt;Do you have to take part?&lt;/b&gt;&amp;#10;Your participation in this study is completely voluntary. You may choose to withdraw at any point during the task without any explanation or consequences. You can also request that we remove the data but please note that once the data have been included in analysis or data repositories [approximately two weeks after data was collected], it cannot be withdrawn." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_15" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_15" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="Introduction3">
      <RoutineSettingsComponent name="Introduction3" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Introduction3" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_9" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_9" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="1.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="&lt;b&gt;How will your data be used?&lt;/b&gt;&amp;#10;Any responses you provide will be treated confidentially. When the study is completed, the analysis of the data will be reported in an academic report. The results may be submitted for journal publication and/or presented at scientific conferences. All data will be aggregated and anonymised – in no way can any individual person be identified from the results. We would like your permission to use your anonymised data in future studies, and to share anonymised data with researchers in other labs and departments (e.g. in online databases). Files that are shared with other researchers or results that are made public will not contain any personal information that could identify you. Responsible members of the University of Birmingham may be given access to data for monitoring and/or audit of the study to ensure we are complying with guidelines, or as otherwise required by law.&amp;#10;&amp;#10;Press SPACE to continue." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="key_resp_14" plugin="None">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="key_resp_14" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="ConsentForm">
      <RoutineSettingsComponent name="ConsentForm" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="ConsentForm" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_10" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_10" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="&lt;b&gt;PARTICIPANT CONSENT FORM&lt;/b&gt;&amp;#10;&amp;#10;In order to continue, you must give your consent to participate in this study. &amp;#10;&amp;#10;&lt;b&gt;If you agree to take part in the study,&lt;/b&gt; please press the &lt;b&gt;Y&lt;/b&gt; button on the keyboard.&amp;#10;&amp;#10;&lt;b&gt;If you do not agree to take part in the study,&lt;/b&gt; please press the &lt;b&gt;N&lt;/b&gt; button on the keyboard." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="consentKey" plugin="None">
        <Param val="'y','n'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="" valType="str" updates="None" name="deviceLabel"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="consentKey" valType="code" updates="None" name="name"/>
        <Param val="press" valType="str" updates="constant" name="registerOn"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_10" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="consent_given = False" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="consent_given = false;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="if ((consentKey.keys === &quot;n&quot;)) {&amp;#10;    continueRoutine = false;&amp;#10;    consent_given = false;&amp;#10;} else {&amp;#10;    consent_given = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="if consentKey.keys == 'n':&amp;#10;    continueRoutine = False  # End the routine&amp;#10;    consent_given = False&amp;#10;else:&amp;#10;    consent_given = True&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_10" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="NoConsent">
      <RoutineSettingsComponent name="NoConsent" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="NoConsent" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_11" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_11" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="4.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="You did not consent. &amp;#10;You will now be redirected to Prolific. &amp;#10;Thank you for your time." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="code_11" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="#Redirect to Prolific if no consent&amp;#10;#window.location.href = &quot;https://app.prolific.com/submissions/complete?cc=SORRY_NO_CONSENT&quot;;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_11" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="CheckPhaseFail">
      <RoutineSettingsComponent name="CheckPhaseFail" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="CheckPhaseFail" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_12" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_12" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="You did not reach the required number of correct responses.&amp;#10;&amp;#10;Unfortunately, you cannot proceed with the rest of the study.&amp;#10;&amp;#10;You will now be redirected to Prolific.&amp;#10;&amp;#10;Please click on &quot;Leave&quot;." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="code_14" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="redirect_checkphase_fail_url = `https://app.prolific.com/submissions/complete?cc=CGWPAWW4`;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="redirect_checkphase_fail_url = f&quot;https://app.prolific.com/submissions/complete?cc=CGWPAWW4&quot;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="redirect_checkphase_fail_url = `https://app.prolific.com/submissions/complete?cc=C10J2OQW`;&amp;#10;window.location.href = redirect_checkphase_fail_url;&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="&amp;#10;&amp;#10;&amp;#10;window.location.href = redirect_checkphase_fail_url" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_14" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="nReps">
      <RoutineSettingsComponent name="nReps" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="nReps" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <CodeComponent name="code_16" plugin="None">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="n_reps_checkfail = (check_phase_failed ? 1 : 0);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="# This ensures we use a JS-friendly version of nReps&amp;#10;n_reps_checkfail = 1 if check_phase_failed else 0&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_16" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="Wait">
      <RoutineSettingsComponent name="Wait" plugin="None">
        <Param val="none" valType="str" updates="None" name="backgroundFit"/>
        <Param val="" valType="str" updates="None" name="backgroundImg"/>
        <Param val="$[0,0,0]" valType="color" updates="None" name="color"/>
        <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
        <Param val="" valType="str" updates="constant" name="desc"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="code" updates="None" name="forceNonSlip"/>
        <Param val="Wait" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="constant" name="skipIf"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="useWindowParams"/>
      </RoutineSettingsComponent>
      <TextComponent name="text_17" plugin="None">
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="False" valType="code" updates="constant" name="draggable"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.05" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_17" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="6.0" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Saving your data, please wait…&amp;#10;&amp;#10;You will be redirected to Qualtrics to complete the questionnaires in a few seconds." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="None" name="validator"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="Introduction"/>
    <Routine name="ParticipantInformation"/>
    <Routine name="RTCalib_prompt"/>
    <Routine name="RTCalib_Instructions"/>
    <LoopInitiator loopType="TrialHandler" name="RTloop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="100" valType="num"/>
      <Param name="name" updates="None" val="RTloop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="RT_Condition_Instructions"/>
    <Routine name="RT_Calib"/>
    <Routine name="RT_WarningText"/>
    <LoopTerminator name="RTloop"/>
    <Routine name="RT_End"/>
    <Routine name="Initialization"/>
    <Routine name="TrainingPrompt"/>
    <Routine name="TrainingInstructions"/>
    <LoopInitiator loopType="TrialHandler" name="comprehensiontrainingloop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="100" valType="num"/>
      <Param name="name" updates="None" val="comprehensiontrainingloop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="ComprehensionTraining1"/>
    <Routine name="ComprehensionTraining2"/>
    <Routine name="ComprehensionTraining3"/>
    <Routine name="ComprehensionTrainingFeedback"/>
    <LoopTerminator name="comprehensiontrainingloop"/>
    <LoopInitiator loopType="TrialHandler" name="TrainingTrials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$stimuli_file" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="TrainingTrials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="FixationCross"/>
    <Routine name="Training"/>
    <Routine name="TrainingFeedback"/>
    <LoopTerminator name="TrainingTrials"/>
    <Routine name="TrainingCredits"/>
    <Routine name="TrainingEnd"/>
    <Routine name="CheckPhasePrompt"/>
    <Routine name="CheckPhaseInstructions"/>
    <LoopInitiator loopType="TrialHandler" name="CheckPhaseTrials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$stimuli_file" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="36" valType="num"/>
      <Param name="name" updates="None" val="CheckPhaseTrials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="FixationCross"/>
    <Routine name="CheckPhase"/>
    <Routine name="CheckPhaseFeedback"/>
    <LoopTerminator name="CheckPhaseTrials"/>
    <Routine name="nReps"/>
    <LoopInitiator loopType="TrialHandler" name="trials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="n_reps_checkfail" valType="num"/>
      <Param name="name" updates="None" val="trials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="CheckPhaseFail"/>
    <LoopTerminator name="trials"/>
    <Routine name="CheckPhaseEnd"/>
    <Routine name="MainPrompt"/>
    <Routine name="MainInstructions"/>
    <Routine name="MainInstructions2"/>
    <LoopInitiator loopType="TrialHandler" name="comprehensionloop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="100" valType="num"/>
      <Param name="name" updates="None" val="comprehensionloop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="ComprehensionCheckMain1"/>
    <Routine name="ComprehensionCheckMain2"/>
    <Routine name="comprehensionresult"/>
    <LoopTerminator name="comprehensionloop"/>
    <LoopInitiator loopType="TrialHandler" name="MainExpTrials">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$main_exp_file" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="MainExpTrials" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Blocks"/>
    <Routine name="FixationCross"/>
    <Routine name="MainExp"/>
    <Routine name="MainExpFeedback"/>
    <Routine name="Rating"/>
    <LoopTerminator name="MainExpTrials"/>
    <Routine name="TimedOutTrials"/>
    <LoopInitiator loopType="TrialHandler" name="RecoveryLoop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="n_recovery_trials" valType="num"/>
      <Param name="name" updates="None" val="RecoveryLoop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="Recovery"/>
    <Routine name="RecoveryFeedback"/>
    <LoopTerminator name="RecoveryLoop"/>
    <Routine name="TotalCredits"/>
    <Routine name="Wait"/>
  </Flow>
</PsychoPy2experiment>
